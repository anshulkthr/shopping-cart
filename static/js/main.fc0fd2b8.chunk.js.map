{"version":3,"sources":["services/util.js","services/shelf/actions.js","components/Spinner/index.js","components/Shelf/Sort/index.js","services/sort/actions.js","services/sort/actionTypes.js","components/Shelf/ShelfHeader/index.js","components/Thumb/index.js","services/cart/actions.js","services/cart/actionTypes.js","components/Shelf/ProductList/Product/index.js","components/Shelf/ProductList/index.js","components/Shelf/index.js","services/shelf/actionTypes.js","components/Shelf/Filter/index.js","services/filters/actions.js","services/filters/actionTypes.js","components/github/Top.js","services/total/actions.js","services/total/actionTypes.js","components/FloatCart/CartProduct/index.js","components/FloatCart/index.js","components/App/index.js","components/FloatCart/CartProduct/Cart/index.js","services/shelf/reducer.js","services/cart/reducer.js","services/total/reducer.js","services/filters/reducer.js","services/sort/reducer.js","services/reducers.js","index.js","services/store.js"],"names":["formatPrice","x","currency","toFixed","replace","compare","lowestprice","a","b","price","highestprice","discount","className","connect","state","sort","type","updateSort","payload","href","onClick","ShelfHeader","props","productsLength","Thumb","classes","src","alt","title","loadCart","products","removeProduct","product","changeProductQuantity","addProduct","quantity","formattedPrice","currencyId","data-sku","id","img_url","name","substr","length","ProductList","map","p","key","Shelf","isLoading","handleFetchProducts","filters","setState","fetchProducts","this","nextProps","nextFilters","nextSort","undefined","Fragment","Spinner","Component","shelf","items","sortBy","callback","dispatch","axios","get","then","res","data","lastFilterVal","filter","catch","err","console","log","Filter","toggleCheckbox","value","selectedCheckboxes","has","delete","add","updateFilters","Array","from","Set","min","max","labels","0","1000","onChange","icon","faStar","updateCart","cartProducts","productQuantity","reduce","sum","totalPrice","installments","greater","currencyFormat","CartProduct","handleMouseOver","isMouseOver","handleMouseOut","handleOnIncrease","handleOnDecrease","push","join","onMouseOver","onMouseOut","disabled","FloatCart","productAlreadyInCart","forEach","cp","index","findIndex","splice","newProduct","productToRemove","productToChange","cartTotal","cart","productToAdd","total","App","Cart","isOpen","proceedToCheckout","alert","changedProduct","find","initialState","combineReducers","action","Object","assign","ReactDOM","render","store","JSON","parse","window","localStorage","getItem","middleware","thunk","createStore","rootReducer","compose","applyMiddleware","subscribe","getState","persist","setItem","stringify","exact","path","document","getElementById"],"mappings":"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","file":"static/js/main.fc0fd2b8.chunk.js","sourcesContent":["export const formatPrice = (x, currency) => {\n  switch (currency) {\n    case 'BRL':\n      return x.toFixed(2).replace('.', ',');\n    default:\n      return x.toFixed(2);\n  }\n};\n\nexport const productsAPI =\n  'https://api.myjson.com/bins/qzuzi.json';\n// export const productsAPI = \"http://localhost:8001/api/products\";\n","import { FETCH_PRODUCTS } from './actionTypes';\nimport axios from 'axios';\n\nimport { productsAPI } from '../util';\n\nconst compare = {\n  lowestprice: (a, b) => {\n    if (a.price < b.price) return -1;\n    if (a.price > b.price) return 1;\n    return 0;\n  },\n  highestprice: (a, b) => {\n    if (a.price > b.price) return -1;\n    if (a.price < b.price) return 1;\n    return 0;\n  },\n    discount: (a, b) => {\n        if (a.discount > b.discount) return -1;\n        if (a.discount < b.discount) return 1;\n        return 0;\n    }\n\n};\n\nexport const fetchProducts = (filters, sortBy, callback) => dispatch => {\n  return axios\n    .get(productsAPI)\n    .then(res => {\n      let products = res.data;\n      let lastFilterVal = filters[filters.length - 1];\n      if (!!filters && filters.length > 0) {\n        products = products.filter(p => lastFilterVal >= p.price);\n      }\n\n      if (!!sortBy) {\n        products = products.sort(compare[sortBy]);\n      }\n\n      if (!!callback) {\n        callback();\n      }\n\n      return dispatch({\n        type: FETCH_PRODUCTS,\n        payload: products\n      });\n    })\n    .catch(err => {\n      console.log('Could not fetch products. Try again later.');\n    });\n};\n","import React from 'react';\n\nimport './style.scss';\n\nexport default () => (\n  <div className=\"spinner lds-ring\">\n    <div />\n    <div />\n    <div />\n    <div />\n  </div>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { updateSort } from '../../../services/sort/actions';\n\nconst Sort = ({ updateSort, sort }) => (\n  <div className=\"sort\">\n    <label>Sort By:</label>\n      <ul className=\"sortFilter\">\n          <li><a href=\"javascript:void(0);\" onClick={() => updateSort('')}>Default</a></li>\n          <li><a href=\"javascript:void(0);\" onClick={() => updateSort('lowestprice')}>Lowest to highest</a></li>\n          <li><a href=\"javascript:void(0);\" onClick={() => updateSort('highestprice')}>Highest to lowest</a></li>\n          <li><a href=\"javascript:void(0);\" onClick={() => updateSort('discount')}>Discount</a></li>\n      </ul>\n  </div>\n);\n\nSort.propTypes = {\n  updateSort: PropTypes.func.isRequired,\n  sort: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  sort: state.sort.type\n});\n\nexport default connect(\n  mapStateToProps,\n  { updateSort }\n)(Sort);\n","import { UPDATE_SORT } from './actionTypes';\n\nexport const updateSort = sort => ({\n  type: UPDATE_SORT,\n  payload: sort\n});\n","export const UPDATE_SORT = 'UPDATE_SORT';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Sort from '../Sort';\n\nconst ShelfHeader = props => {\n  return (\n    <div className=\"shelf-container-header\">\n      <small className=\"products-found\">\n        <span>{props.productsLength} Product(s) found.</span>\n      </small>\n    <Sort />\n    </div>\n  );\n};\n\nShelfHeader.propTypes = {\n  productsLength: PropTypes.number.isRequired\n};\n\nexport default ShelfHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Thumb = props => (\n  <div className={props.classes}>\n    <img src={props.src} alt={props.alt} title={props.title} />\n  </div>\n);\n\nThumb.propTypes = {\n  alt: PropTypes.string,\n  title: PropTypes.string,\n  classes: PropTypes.string,\n  src: PropTypes.string.isRequired\n};\n\nexport default Thumb;\n","import { LOAD_CART, ADD_PRODUCT, REMOVE_PRODUCT, CHANGE_PRODUCT_QUANTITY } from './actionTypes';\n\nexport const loadCart = products => ({\n  type: LOAD_CART,\n  payload: products\n});\n\nexport const addProduct = product => ({\n  type: ADD_PRODUCT,\n  payload: product\n});\n\nexport const removeProduct = product => ({\n  type: REMOVE_PRODUCT,\n  payload: product\n});\n\nexport const changeProductQuantity = product => ({\n  type: CHANGE_PRODUCT_QUANTITY,\n  payload: product\n});","export const LOAD_CART = 'LOAD_CART';\nexport const ADD_PRODUCT = 'ADD_PRODUCT';\nexport const REMOVE_PRODUCT = 'REMOVE_PRODUCT';\nexport const CHANGE_PRODUCT_QUANTITY = 'CHANGE_PRODUCT_QUANTITY';\nexport const UPDATE_CART = 'UPDATE_CART';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport Thumb from '../../../Thumb';\nimport { formatPrice } from '../../../../services/util';\nimport { addProduct } from '../../../../services/cart/actions';\n\nconst Product = ({ product, addProduct }) => {\n  product.quantity = 1;\n\n  let formattedPrice = formatPrice(product.price, product.currencyId);\n\n  return (\n    <div\n      className=\"shelf-item\"\n      onClick={() => addProduct(product)}\n      data-sku={product.id}\n    >\n      <Thumb\n        classes=\"shelf-item__thumb\"\n        src={product.img_url}\n        alt={product.name}\n      />\n      <p className=\"shelf-item__title\">{product.name}</p>\n      <div className=\"shelf-item__price\">\n          {product.discount > 0 ? (\n            <div className=\"prodPrice\">\n              <div className=\"val discountedPrice\">\n                <small>Rs</small>\n                <b>{formattedPrice.substr(0, formattedPrice.length - 3)}</b>\n              </div>\n              <div className=\"val originalPrice\">\n                <strike>\n                  <small>Rs</small>\n                  <b>{(product.price/((100 - product.discount)/100)).toFixed(0)}</b>\n                </strike>\n                <span className=\"percentOff\">{product.discount}% off</span>\n              </div>\n            </div>\n            ) : (\n            <div className=\"val discountedPrice\">\n              <small>Rs</small>\n              <b>{formattedPrice.substr(0, formattedPrice.length - 3)}</b>\n            </div>\n            )\n            }\n      </div>\n      <div className=\"shelf-item__buy-btn\">Add to cart</div>\n    </div>\n  );\n};\n\nProduct.propTypes = {\n  product: PropTypes.object.isRequired,\n  addProduct: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { addProduct }\n)(Product);\n","  import React from 'react';\n\nimport Product from './Product';\n\nconst ProductList = ({ products }) => {\n  return products.map(p => {\n    return <Product product={p} key={p.id} />;\n  });\n};\n\nexport default ProductList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { fetchProducts } from '../../services/shelf/actions';\n\nimport Spinner from '../Spinner';\nimport ShelfHeader from './ShelfHeader';\nimport ProductList from './ProductList';\n\nimport './style.scss';\n\nclass Shelf extends Component {\n  static propTypes = {\n    fetchProducts: PropTypes.func.isRequired,\n    products: PropTypes.array.isRequired,\n    filters: PropTypes.array,\n    sort: PropTypes.string\n  };\n\n  state = {\n    isLoading: false\n  };\n\n  componentDidMount() {\n    this.handleFetchProducts();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { filters: nextFilters, sort: nextSort } = nextProps;\n    const { filters } = this.props;\n    if (nextFilters.length !== filters.length) {\n      this.handleFetchProducts(nextFilters, undefined);\n    }\n\n    if (nextSort !== this.props.sort) {\n      this.handleFetchProducts(undefined, nextSort);\n    }\n  }\n\n  handleFetchProducts = (\n    filters = this.props.filters,\n    sort = this.props.sort\n  ) => {\n    this.setState({ isLoading: true });\n    this.props.fetchProducts(filters, sort, () => {\n      this.setState({ isLoading: false });\n    });\n  };\n\n  render() {\n    const { products } = this.props;\n    const { isLoading } = this.state;\n\n    return (\n      <React.Fragment>\n        {isLoading && <Spinner />}\n        <div className=\"shelf-container\">\n          <ShelfHeader productsLength={products.length} />\n          <ProductList products={products} />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  products: state.shelf.products,\n  filters: state.filters.items,\n  sort: state.sort.type\n});\n\nexport default connect(\n  mapStateToProps,\n  { fetchProducts }\n)(Shelf);\n","export const FETCH_PRODUCTS = 'FETCH_PRODUCTS';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateFilters } from '../../../services/filters/actions';\nimport './style.scss';\nimport Slider from 'react-rangeslider'\nimport 'react-rangeslider/lib/index.css';\n\nclass Filter extends Component {\n\n    constructor(props) {\n      super(props);\n\n      this.state = {\n          value: 0\n      }\n    }\n\n    componentDidMount() {\n        this.selectedCheckboxes = new Set();\n    }\n\n    toggleCheckbox = value => {\n        this.setState({\n          value: value\n        })\n\n        if (this.selectedCheckboxes.has(value)) {\n          this.selectedCheckboxes.delete(value);\n        } else {\n          this.selectedCheckboxes.add(value);\n        }\n        this.props.updateFilters(Array.from(this.selectedCheckboxes));\n    };\n\n\n  render() {\n    const horizontalLabels = {\n      0: '0',\n      1000: '1000'\n    }\n    const { value } = this.state;\n    return (\n        <div className=\"filters\">\n        <h4 className=\"title\">Price:</h4>\n            <div className='slider'>\n              <Slider\n                  min={0}\n                  max={1000}\n                  labels={horizontalLabels}\n                  value={value}\n                  onChange={this.toggleCheckbox}\n              />\n                <div className='rangeValueFilter'>{value}</div>\n            </div>\n        </div>\n    );\n  }\n}\n\n\nexport default connect(\n  null,\n  { updateFilters }\n)(Filter);\n","import { UPDATE_FILTER } from './actionTypes';\n\nexport const updateFilters = filters => ({\n  type: UPDATE_FILTER,\n  payload: filters\n});\n","export const UPDATE_FILTER = 'UPDATE_FILTER';\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\nimport './style.css';\n\nexport default (props) => (\n    <div className=\"topHeader\"><a href=\"/shoppingCart\"><FontAwesomeIcon icon={faStar} /></a></div>\n);\n","import { UPDATE_CART } from './actionTypes';\n\nexport const updateCart = cartProducts => dispatch => {\n  let productQuantity = cartProducts.reduce((sum, p) => {\n    sum += p.quantity;\n    return sum;\n  }, 0);\n\n  let totalPrice = cartProducts.reduce((sum, p) => {\n    sum += p.price * p.quantity;\n    return sum;\n  }, 0);\n\n  let installments = cartProducts.reduce((greater, p) => {\n    greater = p.installments > greater ? p.installments : greater;\n    return greater;\n  }, 0);\n\n  let cartTotal = {\n    productQuantity,\n    installments,\n    totalPrice,\n    currencyId: 'USD',\n    currencyFormat: '$'\n  };\n\n  dispatch({\n    type: UPDATE_CART,\n    payload: cartTotal\n  });\n};\n","export const UPDATE_CART = 'UPDATE_CART';\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Thumb from './../../Thumb';\nimport { formatPrice } from '../../../services/util';\n\nclass CartProduct extends Component {\n  static propTypes = {\n    product: PropTypes.object.isRequired,\n    removeProduct: PropTypes.func.isRequired,\n    changeProductQuantity: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      product: this.props.product,\n      isMouseOver: false\n    };\n  }\n\n  handleMouseOver = () => {\n    this.setState({ isMouseOver: true });\n  };\n\n  handleMouseOut = () => {\n    this.setState({ isMouseOver: false });\n  };\n\n  handleOnIncrease = () => {\n    const { changeProductQuantity } = this.props;\n    const { product } = this.state;\n    product.quantity = product.quantity + 1;\n    changeProductQuantity(product);\n  }\n\n  handleOnDecrease = () => {\n    const { changeProductQuantity } = this.props;\n    const { product } = this.state;\n    product.quantity = product.quantity - 1;\n    changeProductQuantity(product);\n  }\n\n  render() {\n    const { removeProduct } = this.props;\n    const { product } = this.state;\n\n    const classes = ['shelf-item'];\n\n    if (!!this.state.isMouseOver) {\n      classes.push('shelf-item--mouseover');\n    }\n\n    return (\n      <div className={classes.join(' ')}>\n        <div\n          className=\"shelf-item__del\"\n          onMouseOver={() => this.handleMouseOver()}\n          onMouseOut={() => this.handleMouseOut()}\n          onClick={() => removeProduct(product)}\n        />\n        <Thumb\n          classes=\"shelf-item__thumb\"\n          src={product.img_url}\n          alt={product.name}\n        />\n        <div className=\"shelf-item__details\">\n          <p className=\"title\">{product.name}</p>\n          <p className=\"desc\">\n            Quantity: {product.quantity}\n          </p>\n        </div>\n        <div className=\"shelf-item__price\">\n          <p>{`Rs ${formatPrice(product.price, '$')}`}</p>\n          <div>\n            <button onClick={this.handleOnDecrease} disabled={product.quantity === 1 ? true : false} className=\"change-product-button\">-</button>\n            <button onClick={this.handleOnIncrease} className=\"change-product-button\">+</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CartProduct;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { loadCart, removeProduct, changeProductQuantity } from '../../services/cart/actions';\nimport { updateCart } from '../../services/total/actions';\nimport CartProduct from './CartProduct';\nimport { formatPrice } from '../../services/util';\nimport './style.scss';\n\nclass FloatCart extends Component {\n  static propTypes = {\n    loadCart: PropTypes.func.isRequired,\n    updateCart: PropTypes.func.isRequired,\n    cartProducts: PropTypes.array.isRequired,\n    newProduct: PropTypes.object,\n    removeProduct: PropTypes.func,\n    productToRemove: PropTypes.object,\n    changeProductQuantity: PropTypes.func,\n    productToChange: PropTypes.object,\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.newProduct !== this.props.newProduct) {\n      this.addProduct(nextProps.newProduct);\n    }\n\n    if (nextProps.productToRemove !== this.props.productToRemove) {\n      this.removeProduct(nextProps.productToRemove);\n    }\n\n    if (nextProps.productToChange !== this.props.productToChange) {\n      this.changeProductQuantity(nextProps.productToChange);\n    }\n  }\n\n  addProduct = product => {\n    const { cartProducts, updateCart } = this.props;\n    let productAlreadyInCart = false;\n\n    cartProducts.forEach(cp => {\n      if (cp.id === product.id) {\n        cp.quantity += product.quantity;\n        productAlreadyInCart = true;\n      }\n    });\n\n    if (!productAlreadyInCart) {\n      cartProducts.push(product);\n    }\n\n    updateCart(cartProducts);\n  };\n\n  removeProduct = product => {\n    const { cartProducts, updateCart } = this.props;\n\n    const index = cartProducts.findIndex(p => p.id === product.id);\n    if (index >= 0) {\n      cartProducts.splice(index, 1);\n      updateCart(cartProducts);\n    }\n  };\n\n  render() {\n    const { cartTotal, cartProducts, removeProduct, changeProductQuantity } = this.props;\n\n    const products = cartProducts.map(p => {\n      return (\n        <CartProduct product={p} removeProduct={removeProduct} changeProductQuantity={changeProductQuantity} key={p.id} />\n      );\n    });\n\n    let classes = ['float-cart'];\n\n    return (\n      <div className=\"float-cart home\">\n        <a href=\"/shoppingCart/cart\">\n          <span className=\"bag bag--float-cart-closed\">\n            <span className=\"bag__quantity\">{cartTotal.productQuantity}</span>\n          </span>\n        </a>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  cartProducts: state.cart.products,\n  newProduct: state.cart.productToAdd,\n  productToRemove: state.cart.productToRemove,\n  productToChange: state.cart.productToChange,\n  cartTotal: state.total.data\n});\n\nexport default connect(\n  mapStateToProps,\n  { loadCart, updateCart, removeProduct, changeProductQuantity }\n)(FloatCart);","import React from 'react';\nimport Shelf from '../Shelf';\nimport Filter from '../Shelf/Filter';\nimport GithubCorner from '../github/Top';\nimport FloatCart from '../FloatCart';\n\nconst App = () => (\n  <React.Fragment>\n    <GithubCorner />\n    <main>\n      <Filter/>\n      <Shelf />\n    </main>\n    <FloatCart />\n  </React.Fragment>\n);\n\nexport default App;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { loadCart, removeProduct, changeProductQuantity } from '../../../../services/cart/actions';\nimport { updateCart } from '../../../../services/total/actions';\nimport CartProduct from '../../CartProduct';\nimport { formatPrice } from '../../../../services/util';\nimport '../../style.scss';\nimport GithubCorner from '../../../github/Top';\n\nclass Cart extends Component {\n  static propTypes = {\n    loadCart: PropTypes.func.isRequired,\n    updateCart: PropTypes.func.isRequired,\n    cartProducts: PropTypes.array.isRequired,\n    newProduct: PropTypes.object,\n    removeProduct: PropTypes.func,\n    productToRemove: PropTypes.object,\n    changeProductQuantity: PropTypes.func,\n    productToChange: PropTypes.object,\n  };\n\n  state = {\n    isOpen: true\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.newProduct !== this.props.newProduct) {\n      this.addProduct(nextProps.newProduct);\n    }\n\n    if (nextProps.productToRemove !== this.props.productToRemove) {\n      this.removeProduct(nextProps.productToRemove);\n    }\n\n    if (nextProps.productToChange !== this.props.productToChange) {\n      this.changeProductQuantity(nextProps.productToChange);\n    }\n  }\n\n\n  addProduct = product => {\n    const { cartProducts, updateCart } = this.props;\n    let productAlreadyInCart = false;\n\n    cartProducts.forEach(cp => {\n      if (cp.id === product.id) {\n        cp.quantity += product.quantity;\n        productAlreadyInCart = true;\n      }\n    });\n\n    if (!productAlreadyInCart) {\n      cartProducts.push(product);\n    }\n\n    updateCart(cartProducts);\n  };\n\n  removeProduct = product => {\n    const { cartProducts, updateCart } = this.props;\n\n    const index = cartProducts.findIndex(p => p.id === product.id);\n    if (index >= 0) {\n      cartProducts.splice(index, 1);\n      updateCart(cartProducts);\n    }\n  };\n\n  proceedToCheckout = () => {\n    const {\n      totalPrice,\n      productQuantity,\n      currencyFormat,\n      currencyId\n    } = this.props.cartTotal;\n\n    if (!productQuantity) {\n      alert('Add some product in the cart!');\n    } else {\n      alert(\n        `Checkout - Subtotal: Rs ${formatPrice(\n          totalPrice,\n          currencyId\n        )}`\n      );\n    }\n  };\n\n  changeProductQuantity = changedProduct => {\n    const { cartProducts, updateCart } = this.props;\n\n    const product = cartProducts.find(p => p.id === changedProduct.id);\n    product.quantity = changedProduct.quantity;\n    if (product.quantity <= 0) {\n      this.removeProduct(product);\n    }\n    updateCart(cartProducts);\n  }\n\n  render() {\n    const { cartTotal, cartProducts, removeProduct, changeProductQuantity } = this.props;\n\n    const products = cartProducts.map(p => {\n      return (\n        <CartProduct product={p} removeProduct={removeProduct} changeProductQuantity={changeProductQuantity} key={p.id} />\n      );\n    });\n\n    let classes = ['float-cart'];\n\n    if (!!this.state.isOpen) {\n      classes.push('float-cart--open');\n    }\n\n    return (\n      <>\n      <GithubCorner />\n      <div className={classes.join(' ')}>\n        <div className=\"float-cart__content\">\n          <div className=\"float-cart__shelf-container\">\n            {products}\n            {!products.length && (\n              <p className=\"shelf-empty\">\n                Add some products in the cart <br />\n                :)\n              </p>\n            )}\n          </div>\n\n          <div className=\"float-cart__footer\">\n            <div className=\"sub\">SUBTOTAL</div>\n            <div className=\"sub-price\">\n              <p className=\"sub-price__val\">\n                {`Rs ${formatPrice(\n                  cartTotal.totalPrice,\n                  cartTotal.currencyId\n                )}`}\n              </p>\n              <small className=\"sub-price__installment\">\n                {!!cartTotal.installments && (\n                  <span>\n                    {`OR UP TO ${cartTotal.installments} x ${\n                      cartTotal.currencyFormat\n                    } ${formatPrice(\n                      cartTotal.totalPrice / cartTotal.installments,\n                      cartTotal.currencyId\n                    )}`}\n                  </span>\n                )}\n              </small>\n            </div>\n            <div onClick={() => this.proceedToCheckout()} className=\"buy-btn\">\n              Checkout\n            </div>\n          </div>\n        </div>\n      </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  cartProducts: state.cart.products,\n  newProduct: state.cart.productToAdd,\n  productToRemove: state.cart.productToRemove,\n  productToChange: state.cart.productToChange,\n  cartTotal: state.total.data\n});\n\nexport default connect(\n  mapStateToProps,\n  { loadCart, updateCart, removeProduct, changeProductQuantity }\n)(Cart);","import { FETCH_PRODUCTS } from './actionTypes';\n\nconst initialState = {\n  products: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_PRODUCTS:\n      return {\n        ...state,\n        products: action.payload,\n\n      };\n    default:\n      return state;\n  }\n}\n","import { LOAD_CART, ADD_PRODUCT, REMOVE_PRODUCT, CHANGE_PRODUCT_QUANTITY } from './actionTypes';\n\nconst initialState = {\n  products: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case LOAD_CART:\n      return {\n        ...state,\n        products: action.payload\n      };\n    case ADD_PRODUCT:\n      return {\n        ...state,\n        productToAdd: Object.assign({}, action.payload)\n      };\n    case REMOVE_PRODUCT:\n      return {\n        ...state,\n        productToRemove: Object.assign({}, action.payload)\n      };\n    case CHANGE_PRODUCT_QUANTITY:\n      return {\n        ...state,\n        productToChange: Object.assign({}, action.payload)\n      };\n    default:\n      return state;\n  }\n}\n","import { UPDATE_CART } from './actionTypes';\n\nconst initialState = {\n  data: {\n    productQuantity: 0,\n    installments: 0,\n    totalPrice: 0,\n    currencyId: 'USD',\n    currencyFormat: '$'\n  }\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_CART:\n      return {\n        ...state,\n        data: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { UPDATE_FILTER } from './actionTypes';\n\nconst initialState = {\n  items: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_FILTER:\n      return {\n        ...state,\n        items: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { UPDATE_SORT } from './actionTypes';\n\nconst initialState = {\n  type: ''\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_SORT:\n      return {\n        ...state,\n        type: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport shelfReducer from './shelf/reducer';\nimport cartReducer from './cart/reducer';\nimport totalReducer from './total/reducer';\nimport filtersReducer from './filters/reducer';\nimport sortReducer from './sort/reducer';\n\nexport default combineReducers({\n  shelf: shelfReducer,\n  cart: cartReducer,\n  total: totalReducer,\n  filters: filtersReducer,\n  sort: sortReducer\n});\n","import 'babel-polyfill'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport './index.scss';\nimport { Provider } from 'react-redux';\nimport Cart from './components/FloatCart/CartProduct/Cart';\nimport store from './services/store';\n\nReactDOM.render(\n\t<Provider store={store()}>\n\t  <Router>\n\t  \t<Route exact path=\"/shoppingCart\">\n\t    \t<App />\n\t    </Route>\n\t    <Route path=\"/shoppingCart/cart\">\n\t    \t<Cart />\n\t    </Route>\n\t  </Router>\n\t</Provider>,\n  document.getElementById('root')\n);\n","import { compose, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nexport default initialState => {\n  initialState =\n    JSON.parse(window.localStorage.getItem('state')) || initialState;\n  const middleware = [thunk];\n\n  const store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n      applyMiddleware(...middleware)\n      /* window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION__() */\n    )\n  );\n\n  store.subscribe(() => {\n    const state = store.getState();\n    const persist = {\n      cart: state.cart,\n      total: state.total\n    };\n\n    window.localStorage.setItem('state', JSON.stringify(persist));\n  });\n\n  return store;\n};\n"],"sourceRoot":""}
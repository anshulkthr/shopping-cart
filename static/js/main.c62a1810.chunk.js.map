{"version":3,"sources":["services/util.js","services/shelf/actions.js","components/Spinner/index.js","components/Shelf/Sort/index.js","services/sort/actions.js","services/sort/actionTypes.js","components/Shelf/ShelfHeader/index.js","components/Thumb/index.js","components/Shelf/ProductList/Product/index.js","services/cart/actions.js","services/cart/actionTypes.js","components/Shelf/ProductList/index.js","components/Shelf/index.js","services/shelf/actionTypes.js","components/Shelf/Filter/index.js","services/filters/actions.js","services/filters/actionTypes.js","components/github/Top.js","components/FloatCart/CartProduct/index.js","components/FloatCart/index.js","services/total/actions.js","services/total/actionTypes.js","components/App/index.js","services/shelf/reducer.js","services/cart/reducer.js","services/total/reducer.js","services/filters/reducer.js","services/sort/reducer.js","services/reducers.js","services/store.js","Root.js","index.js"],"names":["formatPrice","x","currency","toFixed","replace","compare","lowestprice","a","b","price","highestprice","discount","Spinner","react_default","createElement","className","connect","state","sort","type","updateSort","payload","_ref","href","onClick","ShelfHeader","props","productsLength","Shelf_Sort","Thumb","classes","src","alt","title","addProduct","product","quantity","formattedPrice","currencyId","data-sku","id","components_Thumb","img_url","name","substr","length","ProductList","products","map","p","ProductList_Product","key","Shelf","isLoading","handleFetchProducts","filters","arguments","undefined","_this","setState","fetchProducts","this","nextProps","nextFilters","nextSort","Fragment","Shelf_ShelfHeader","Shelf_ProductList","Component","shelf","items","sortBy","callback","dispatch","axios","get","then","res","data","lastFilterVal","filter","catch","err","console","log","Filter","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleCheckbox","value","selectedCheckboxes","has","delete","add","updateFilters","Array","from","Set","react_rangeslider_lib_default","min","max","labels","0","1000","onChange","Top","index_es","icon","faStar","CartProduct","handleMouseOver","isMouseOver","handleMouseOut","handleOnIncrease","changeProductQuantity","handleOnDecrease","_this2","removeProduct","push","join","onMouseOver","onMouseOut","concat","disabled","FloatCart","isOpen","openFloatCart","closeFloatCart","_this$props","cartProducts","updateCart","productAlreadyInCart","forEach","cp","_this$props2","index","findIndex","splice","proceedToCheckout","_this$props$cartTotal","cartTotal","totalPrice","productQuantity","currencyFormat","alert","changedProduct","_this$props3","find","newProduct","productToRemove","productToChange","_this$props4","FloatCart_CartProduct","installments","cart","productToAdd","total","loadCart","reduce","sum","greater","App","Shelf_Filter","components_Shelf","components_FloatCart","initialState","combineReducers","action","objectSpread","assign","services_store","JSON","parse","window","localStorage","getItem","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","subscribe","getState","persist","setItem","stringify","Root","children","_ref$initialState","es","ReactDOM","render","src_Root","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.c62a1810.chunk.js","sourcesContent":["export const formatPrice = (x, currency) => {\n  switch (currency) {\n    case 'BRL':\n      return x.toFixed(2).replace('.', ',');\n    default:\n      return x.toFixed(2);\n  }\n};\n\nexport const productsAPI =\n  'https://api.myjson.com/bins/qzuzi.json';\n// export const productsAPI = \"http://localhost:8001/api/products\";\n","import { FETCH_PRODUCTS } from './actionTypes';\nimport axios from 'axios';\n\nimport { productsAPI } from '../util';\n\nconst compare = {\n  lowestprice: (a, b) => {\n    if (a.price < b.price) return -1;\n    if (a.price > b.price) return 1;\n    return 0;\n  },\n  highestprice: (a, b) => {\n    if (a.price > b.price) return -1;\n    if (a.price < b.price) return 1;\n    return 0;\n  },\n    discount: (a, b) => {\n        if (a.discount > b.discount) return -1;\n        if (a.discount < b.discount) return 1;\n        return 0;\n    }\n\n};\n\nexport const fetchProducts = (filters, sortBy, callback) => dispatch => {\n  return axios\n    .get(productsAPI)\n    .then(res => {\n      let products = res.data;\n      let lastFilterVal = filters[filters.length - 1];\n      if (!!filters && filters.length > 0) {\n        products = products.filter(p => lastFilterVal >= p.price);\n      }\n\n      if (!!sortBy) {\n        products = products.sort(compare[sortBy]);\n      }\n\n      if (!!callback) {\n        callback();\n      }\n\n      return dispatch({\n        type: FETCH_PRODUCTS,\n        payload: products\n      });\n    })\n    .catch(err => {\n      console.log('Could not fetch products. Try again later.');\n    });\n};\n","import React from 'react';\n\nimport './style.scss';\n\nexport default () => (\n  <div className=\"spinner lds-ring\">\n    <div />\n    <div />\n    <div />\n    <div />\n  </div>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { updateSort } from '../../../services/sort/actions';\n\nconst Sort = ({ updateSort, sort }) => (\n  <div className=\"sort\">\n    <label>Sort By:</label>\n      <ul className=\"sortFilter\">\n          <li><a href=\"javascript:void(0);\" onClick={() => updateSort('')}>Default</a></li>\n          <li><a href=\"javascript:void(0);\" onClick={() => updateSort('lowestprice')}>Lowest to highest</a></li>\n          <li><a href=\"javascript:void(0);\" onClick={() => updateSort('highestprice')}>Highest to lowest</a></li>\n          <li><a href=\"javascript:void(0);\" onClick={() => updateSort('discount')}>Discount</a></li>\n      </ul>\n  </div>\n);\n\nSort.propTypes = {\n  updateSort: PropTypes.func.isRequired,\n  sort: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  sort: state.sort.type\n});\n\nexport default connect(\n  mapStateToProps,\n  { updateSort }\n)(Sort);\n","import { UPDATE_SORT } from './actionTypes';\n\nexport const updateSort = sort => ({\n  type: UPDATE_SORT,\n  payload: sort\n});\n","export const UPDATE_SORT = 'UPDATE_SORT';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Sort from '../Sort';\n\nconst ShelfHeader = props => {\n  return (\n    <div className=\"shelf-container-header\">\n      <small className=\"products-found\">\n        <span>{props.productsLength} Product(s) found.</span>\n      </small>\n    <Sort />\n    </div>\n  );\n};\n\nShelfHeader.propTypes = {\n  productsLength: PropTypes.number.isRequired\n};\n\nexport default ShelfHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Thumb = props => (\n  <div className={props.classes}>\n    <img src={props.src} alt={props.alt} title={props.title} />\n  </div>\n);\n\nThumb.propTypes = {\n  alt: PropTypes.string,\n  title: PropTypes.string,\n  classes: PropTypes.string,\n  src: PropTypes.string.isRequired\n};\n\nexport default Thumb;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport Thumb from '../../../Thumb';\nimport { formatPrice } from '../../../../services/util';\nimport { addProduct } from '../../../../services/cart/actions';\n\nconst Product = ({ product, addProduct }) => {\n  product.quantity = 1;\n\n  let formattedPrice = formatPrice(product.price, product.currencyId);\n\n  return (\n    <div\n      className=\"shelf-item\"\n      onClick={() => addProduct(product)}\n      data-sku={product.id}\n    >\n      <Thumb\n        classes=\"shelf-item__thumb\"\n        src={product.img_url}\n        alt={product.name}\n      />\n      <p className=\"shelf-item__title\">{product.name}</p>\n      <div className=\"shelf-item__price\">\n          {product.discount > 0 ? (\n            <div className=\"prodPrice\">\n              <div className=\"val discountedPrice\">\n                <small>Rs</small>\n                <b>{formattedPrice.substr(0, formattedPrice.length - 3)}</b>\n              </div>\n              <div className=\"val originalPrice\">\n                <strike>\n                  <small>Rs</small>\n                  <b>{(product.price/((100 - product.discount)/100)).toFixed(0)}</b>\n                </strike>\n                <span className=\"percentOff\">{product.discount}% off</span>\n              </div>\n            </div>\n            ) : (\n            <div className=\"val discountedPrice\">\n              <small>Rs</small>\n              <b>{formattedPrice.substr(0, formattedPrice.length - 3)}</b>\n            </div>\n            )\n            }\n      </div>\n      <div className=\"shelf-item__buy-btn\">Add to cart</div>\n    </div>\n  );\n};\n\nProduct.propTypes = {\n  product: PropTypes.object.isRequired,\n  addProduct: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { addProduct }\n)(Product);\n","import { LOAD_CART, ADD_PRODUCT, REMOVE_PRODUCT, CHANGE_PRODUCT_QUANTITY } from './actionTypes';\n\nexport const loadCart = products => ({\n  type: LOAD_CART,\n  payload: products\n});\n\nexport const addProduct = product => ({\n  type: ADD_PRODUCT,\n  payload: product\n});\n\nexport const removeProduct = product => ({\n  type: REMOVE_PRODUCT,\n  payload: product\n});\n\nexport const changeProductQuantity = product => ({\n  type: CHANGE_PRODUCT_QUANTITY,\n  payload: product\n});","export const LOAD_CART = 'LOAD_CART';\nexport const ADD_PRODUCT = 'ADD_PRODUCT';\nexport const REMOVE_PRODUCT = 'REMOVE_PRODUCT';\nexport const CHANGE_PRODUCT_QUANTITY = 'CHANGE_PRODUCT_QUANTITY';\nexport const UPDATE_CART = 'UPDATE_CART';\n","  import React from 'react';\n\nimport Product from './Product';\n\nconst ProductList = ({ products }) => {\n  return products.map(p => {\n    return <Product product={p} key={p.id} />;\n  });\n};\n\nexport default ProductList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { fetchProducts } from '../../services/shelf/actions';\n\nimport Spinner from '../Spinner';\nimport ShelfHeader from './ShelfHeader';\nimport ProductList from './ProductList';\n\nimport './style.scss';\n\nclass Shelf extends Component {\n  static propTypes = {\n    fetchProducts: PropTypes.func.isRequired,\n    products: PropTypes.array.isRequired,\n    filters: PropTypes.array,\n    sort: PropTypes.string\n  };\n\n  state = {\n    isLoading: false\n  };\n\n  componentDidMount() {\n    this.handleFetchProducts();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { filters: nextFilters, sort: nextSort } = nextProps;\n    const { filters } = this.props;\n    if (nextFilters.length !== filters.length) {\n      this.handleFetchProducts(nextFilters, undefined);\n    }\n\n    if (nextSort !== this.props.sort) {\n      this.handleFetchProducts(undefined, nextSort);\n    }\n  }\n\n  handleFetchProducts = (\n    filters = this.props.filters,\n    sort = this.props.sort\n  ) => {\n    this.setState({ isLoading: true });\n    this.props.fetchProducts(filters, sort, () => {\n      this.setState({ isLoading: false });\n    });\n  };\n\n  render() {\n    const { products } = this.props;\n    const { isLoading } = this.state;\n\n    return (\n      <React.Fragment>\n        {isLoading && <Spinner />}\n        <div className=\"shelf-container\">\n          <ShelfHeader productsLength={products.length} />\n          <ProductList products={products} />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  products: state.shelf.products,\n  filters: state.filters.items,\n  sort: state.sort.type\n});\n\nexport default connect(\n  mapStateToProps,\n  { fetchProducts }\n)(Shelf);\n","export const FETCH_PRODUCTS = 'FETCH_PRODUCTS';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateFilters } from '../../../services/filters/actions';\nimport './style.scss';\nimport Slider from 'react-rangeslider'\nimport 'react-rangeslider/lib/index.css';\n\nclass Filter extends Component {\n\n    constructor(props) {\n      super(props);\n\n      this.state = {\n          value: 0\n      }\n    }\n\n    componentDidMount() {\n        this.selectedCheckboxes = new Set();\n    }\n\n    toggleCheckbox = value => {\n        this.setState({\n          value: value\n        })\n\n        if (this.selectedCheckboxes.has(value)) {\n          this.selectedCheckboxes.delete(value);\n        } else {\n          this.selectedCheckboxes.add(value);\n        }\n        this.props.updateFilters(Array.from(this.selectedCheckboxes));\n    };\n\n\n  render() {\n    const horizontalLabels = {\n      0: '0',\n      1000: '1000'\n    }\n    const { value } = this.state;\n    return (\n        <div className=\"filters\">\n        <h4 className=\"title\">Price:</h4>\n            <div className='slider'>\n              <Slider\n                  min={0}\n                  max={1000}\n                  labels={horizontalLabels}\n                  value={value}\n                  onChange={this.toggleCheckbox}\n              />\n                <div className='rangeValueFilter'>{value}</div>\n            </div>\n        </div>\n    );\n  }\n}\n\n\nexport default connect(\n  null,\n  { updateFilters }\n)(Filter);\n","import { UPDATE_FILTER } from './actionTypes';\n\nexport const updateFilters = filters => ({\n  type: UPDATE_FILTER,\n  payload: filters\n});\n","export const UPDATE_FILTER = 'UPDATE_FILTER';\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\nimport './style.css';\n\nexport default (props) => (\n    <div className=\"topHeader\"><a href=\"/shoppingCart\"><FontAwesomeIcon icon={faStar} /></a></div>\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Thumb from './../../Thumb';\nimport { formatPrice } from '../../../services/util';\n\nclass CartProduct extends Component {\n  static propTypes = {\n    product: PropTypes.object.isRequired,\n    removeProduct: PropTypes.func.isRequired,\n    changeProductQuantity: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      product: this.props.product,\n      isMouseOver: false\n    };\n  }\n\n  handleMouseOver = () => {\n    this.setState({ isMouseOver: true });\n  };\n\n  handleMouseOut = () => {\n    this.setState({ isMouseOver: false });\n  };\n\n  handleOnIncrease = () => {\n    const { changeProductQuantity } = this.props;\n    const { product } = this.state;\n    product.quantity = product.quantity + 1;\n    changeProductQuantity(product);\n  }\n\n  handleOnDecrease = () => {\n    const { changeProductQuantity } = this.props;\n    const { product } = this.state;\n    product.quantity = product.quantity - 1;\n    changeProductQuantity(product);\n  }\n\n  render() {\n    const { removeProduct } = this.props;\n    const { product } = this.state;\n\n    const classes = ['shelf-item'];\n\n    if (!!this.state.isMouseOver) {\n      classes.push('shelf-item--mouseover');\n    }\n\n    return (\n      <div className={classes.join(' ')}>\n        <div\n          className=\"shelf-item__del\"\n          onMouseOver={() => this.handleMouseOver()}\n          onMouseOut={() => this.handleMouseOut()}\n          onClick={() => removeProduct(product)}\n        />\n        <Thumb\n          classes=\"shelf-item__thumb\"\n          src={product.img_url}\n          alt={product.name}\n        />\n        <div className=\"shelf-item__details\">\n          <p className=\"title\">{product.name}</p>\n          <p className=\"desc\">\n            Quantity: {product.quantity}\n          </p>\n        </div>\n        <div className=\"shelf-item__price\">\n          <p>{`Rs ${formatPrice(product.price, '$')}`}</p>\n          <div>\n            <button onClick={this.handleOnDecrease} disabled={product.quantity === 1 ? true : false} className=\"change-product-button\">-</button>\n            <button onClick={this.handleOnIncrease} className=\"change-product-button\">+</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CartProduct;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { loadCart, removeProduct, changeProductQuantity } from '../../services/cart/actions';\nimport { updateCart } from '../../services/total/actions';\nimport CartProduct from './CartProduct';\nimport { formatPrice } from '../../services/util';\nimport './style.scss';\n\nclass FloatCart extends Component {\n  static propTypes = {\n    loadCart: PropTypes.func.isRequired,\n    updateCart: PropTypes.func.isRequired,\n    cartProducts: PropTypes.array.isRequired,\n    newProduct: PropTypes.object,\n    removeProduct: PropTypes.func,\n    productToRemove: PropTypes.object,\n    changeProductQuantity: PropTypes.func,\n    productToChange: PropTypes.object,\n  };\n\n  state = {\n    isOpen: false\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.newProduct !== this.props.newProduct) {\n      this.addProduct(nextProps.newProduct);\n    }\n\n    if (nextProps.productToRemove !== this.props.productToRemove) {\n      this.removeProduct(nextProps.productToRemove);\n    }\n\n    if (nextProps.productToChange !== this.props.productToChange) {\n      this.changeProductQuantity(nextProps.productToChange);\n    }\n  }\n\n  openFloatCart = () => {\n    this.setState({ isOpen: true });\n  };\n\n  closeFloatCart = () => {\n    this.setState({ isOpen: false });\n  };\n\n  addProduct = product => {\n    const { cartProducts, updateCart } = this.props;\n    let productAlreadyInCart = false;\n\n    cartProducts.forEach(cp => {\n      if (cp.id === product.id) {\n        cp.quantity += product.quantity;\n        productAlreadyInCart = true;\n      }\n    });\n\n    if (!productAlreadyInCart) {\n      cartProducts.push(product);\n    }\n\n    updateCart(cartProducts);\n    this.openFloatCart();\n  };\n\n  removeProduct = product => {\n    const { cartProducts, updateCart } = this.props;\n\n    const index = cartProducts.findIndex(p => p.id === product.id);\n    if (index >= 0) {\n      cartProducts.splice(index, 1);\n      updateCart(cartProducts);\n    }\n  };\n\n  proceedToCheckout = () => {\n    const {\n      totalPrice,\n      productQuantity,\n      currencyFormat,\n      currencyId\n    } = this.props.cartTotal;\n\n    if (!productQuantity) {\n      alert('Add some product in the cart!');\n    } else {\n      alert(\n        `Checkout - Subtotal: ${currencyFormat} ${formatPrice(\n          totalPrice,\n          currencyId\n        )}`\n      );\n    }\n  };\n\n  changeProductQuantity = changedProduct => {\n    const { cartProducts, updateCart } = this.props;\n\n    const product = cartProducts.find(p => p.id === changedProduct.id);\n    product.quantity = changedProduct.quantity;\n    if (product.quantity <= 0) {\n      this.removeProduct(product);\n    }\n    updateCart(cartProducts);\n  }\n\n  render() {\n    const { cartTotal, cartProducts, removeProduct, changeProductQuantity } = this.props;\n\n    const products = cartProducts.map(p => {\n      return (\n        <CartProduct product={p} removeProduct={removeProduct} changeProductQuantity={changeProductQuantity} key={p.id} />\n      );\n    });\n\n    let classes = ['float-cart'];\n\n    if (!!this.state.isOpen) {\n      classes.push('float-cart--open');\n    }\n\n    return (\n\n      <div className={classes.join(' ')}>\n        {/* If cart open, show close (x) button */}\n        {this.state.isOpen && (\n          <div\n            onClick={() => this.closeFloatCart()}\n            className=\"float-cart__close-btn\"\n          >\n            X\n          </div>\n        )}\n\n        {/* If cart is closed, show bag with quantity of product and open cart action */}\n        {!this.state.isOpen && (\n          <span\n            onClick={() => this.openFloatCart()}\n            className=\"bag bag--float-cart-closed\"\n          >\n            <span className=\"bag__quantity\">{cartTotal.productQuantity}</span>\n          </span>\n        )}\n\n        <div className=\"float-cart__content\">\n          <div className=\"float-cart__header\">\n            <span className=\"bag\">\n              <span className=\"bag__quantity\">{cartTotal.productQuantity}</span>\n            </span>\n            <span className=\"header-title\">Cart</span>\n          </div>\n\n          <div className=\"float-cart__shelf-container\">\n            {products}\n            {!products.length && (\n              <p className=\"shelf-empty\">\n                Add some products in the cart <br />\n                :)\n              </p>\n            )}\n          </div>\n\n          <div className=\"float-cart__footer\">\n            <div className=\"sub\">SUBTOTAL</div>\n            <div className=\"sub-price\">\n              <p className=\"sub-price__val\">\n                {`Rs ${formatPrice(\n                  cartTotal.totalPrice,\n                  cartTotal.currencyId\n                )}`}\n              </p>\n              <small className=\"sub-price__installment\">\n                {!!cartTotal.installments && (\n                  <span>\n                    {`OR UP TO ${cartTotal.installments} x ${\n                      cartTotal.currencyFormat\n                    } ${formatPrice(\n                      cartTotal.totalPrice / cartTotal.installments,\n                      cartTotal.currencyId\n                    )}`}\n                  </span>\n                )}\n              </small>\n            </div>\n            <div onClick={() => this.proceedToCheckout()} className=\"buy-btn\">\n              Checkout\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  cartProducts: state.cart.products,\n  newProduct: state.cart.productToAdd,\n  productToRemove: state.cart.productToRemove,\n  productToChange: state.cart.productToChange,\n  cartTotal: state.total.data\n});\n\nexport default connect(\n  mapStateToProps,\n  { loadCart, updateCart, removeProduct, changeProductQuantity }\n)(FloatCart);\n","import { UPDATE_CART } from './actionTypes';\n\nexport const updateCart = cartProducts => dispatch => {\n  let productQuantity = cartProducts.reduce((sum, p) => {\n    sum += p.quantity;\n    return sum;\n  }, 0);\n\n  let totalPrice = cartProducts.reduce((sum, p) => {\n    sum += p.price * p.quantity;\n    return sum;\n  }, 0);\n\n  let installments = cartProducts.reduce((greater, p) => {\n    greater = p.installments > greater ? p.installments : greater;\n    return greater;\n  }, 0);\n\n  let cartTotal = {\n    productQuantity,\n    installments,\n    totalPrice,\n    currencyId: 'USD',\n    currencyFormat: '$'\n  };\n\n  dispatch({\n    type: UPDATE_CART,\n    payload: cartTotal\n  });\n};\n","export const UPDATE_CART = 'UPDATE_CART';\n","import React from 'react';\nimport Shelf from '../Shelf';\nimport Filter from '../Shelf/Filter';\nimport GithubCorner from '../github/Top';\nimport FloatCart from '../FloatCart';\n\nconst App = () => (\n  <React.Fragment>\n    <GithubCorner />\n    <main>\n      <Filter/>\n      <Shelf />\n    </main>\n    <FloatCart />\n  </React.Fragment>\n);\n\nexport default App;\n","import { FETCH_PRODUCTS } from './actionTypes';\n\nconst initialState = {\n  products: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_PRODUCTS:\n      return {\n        ...state,\n        products: action.payload,\n\n      };\n    default:\n      return state;\n  }\n}\n","import { LOAD_CART, ADD_PRODUCT, REMOVE_PRODUCT, CHANGE_PRODUCT_QUANTITY } from './actionTypes';\n\nconst initialState = {\n  products: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case LOAD_CART:\n      return {\n        ...state,\n        products: action.payload\n      };\n    case ADD_PRODUCT:\n      return {\n        ...state,\n        productToAdd: Object.assign({}, action.payload)\n      };\n    case REMOVE_PRODUCT:\n      return {\n        ...state,\n        productToRemove: Object.assign({}, action.payload)\n      };\n    case CHANGE_PRODUCT_QUANTITY:\n      return {\n        ...state,\n        productToChange: Object.assign({}, action.payload)\n      };\n    default:\n      return state;\n  }\n}\n","import { UPDATE_CART } from './actionTypes';\n\nconst initialState = {\n  data: {\n    productQuantity: 0,\n    installments: 0,\n    totalPrice: 0,\n    currencyId: 'USD',\n    currencyFormat: '$'\n  }\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_CART:\n      return {\n        ...state,\n        data: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { UPDATE_FILTER } from './actionTypes';\n\nconst initialState = {\n  items: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_FILTER:\n      return {\n        ...state,\n        items: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { UPDATE_SORT } from './actionTypes';\n\nconst initialState = {\n  type: ''\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_SORT:\n      return {\n        ...state,\n        type: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport shelfReducer from './shelf/reducer';\nimport cartReducer from './cart/reducer';\nimport totalReducer from './total/reducer';\nimport filtersReducer from './filters/reducer';\nimport sortReducer from './sort/reducer';\n\nexport default combineReducers({\n  shelf: shelfReducer,\n  cart: cartReducer,\n  total: totalReducer,\n  filters: filtersReducer,\n  sort: sortReducer\n});\n","import { compose, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nexport default initialState => {\n  initialState =\n    JSON.parse(window.localStorage.getItem('state')) || initialState;\n  const middleware = [thunk];\n\n  const store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n      applyMiddleware(...middleware)\n      /* window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION__() */\n    )\n  );\n\n  store.subscribe(() => {\n    const state = store.getState();\n    const persist = {\n      cart: state.cart,\n      total: state.total\n    };\n\n    window.localStorage.setItem('state', JSON.stringify(persist));\n  });\n\n  return store;\n};\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport store from './services/store';\n\nconst Root = ({ children, initialState = {} }) => (\n  <Provider store={store(initialState)}>{children}</Provider>\n);\n\nexport default Root;\n","import 'babel-polyfill'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\nimport Root from './Root';\n\nimport './index.scss';\n\nReactDOM.render(\n  <Root>\n    <App />\n  </Root>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
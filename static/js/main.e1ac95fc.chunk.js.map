{"version":3,"sources":["services/util.js","services/shelf/actions.js","components/Spinner/index.js","components/Selectbox/index.js","components/Shelf/Sort/index.js","services/sort/actions.js","services/sort/actionTypes.js","components/Shelf/ShelfHeader/index.js","components/Thumb/index.js","components/Shelf/ProductList/Product/index.js","services/cart/actions.js","services/cart/actionTypes.js","components/Shelf/ProductList/index.js","components/Shelf/index.js","services/shelf/actionTypes.js","components/Checkbox/index.js","components/github/StarButton.js","components/Shelf/Filter/index.js","services/filters/actions.js","services/filters/actionTypes.js","components/github/Top.js","components/FloatCart/CartProduct/index.js","components/FloatCart/index.js","services/total/actions.js","services/total/actionTypes.js","components/App/index.js","services/shelf/reducer.js","services/cart/reducer.js","services/total/reducer.js","services/filters/reducer.js","services/sort/reducer.js","services/reducers.js","services/store.js","Root.js","index.js"],"names":["formatPrice","x","currency","toFixed","replace","compare","lowestprice","a","b","price","highestprice","Spinner","react_default","createElement","className","Selectbox","_ref","options","classes","handleOnChange","onChange","e","target","value","map","o","key","label","createOptions","sortBy","connect","state","sort","type","updateSort","payload","components_Selectbox","ShelfHeader","props","productsLength","Shelf_Sort","Thumb","src","alt","title","addProduct","product","quantity","formattedPrice","currencyId","onClick","data-sku","id","components_Thumb","img_url","name","substr","length","ProductList","products","p","ProductList_Product","Shelf","isLoading","handleFetchProducts","filters","arguments","undefined","_this","setState","fetchProducts","this","nextProps","nextFilters","nextSort","Fragment","Shelf_ShelfHeader","Shelf_ProductList","Component","shelf","items","callback","dispatch","axios","get","then","res","data","filter","find","f","availableSizes","size","catch","err","console","log","Checkbox","isChecked","toggleCheckboxChange","_this$props","handleCheckboxChange","_this$props2","checked","StarButton","href","data-icon","data-size","data-show-count","aria-label","Filter","toggleCheckbox","selectedCheckboxes","has","delete","add","updateFilters","Array","from","createCheckbox","components_Checkbox","createCheckboxes","Set","github_StarButton","Top","index_es","icon","faStar","CartProduct","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleMouseOver","isMouseOver","handleMouseOut","handleOnIncrease","changeProductQuantity","handleOnDecrease","_this2","removeProduct","push","join","onMouseOver","onMouseOut","concat","disabled","FloatCart","isOpen","openFloatCart","closeFloatCart","cartProducts","updateCart","productAlreadyInCart","forEach","cp","index","findIndex","splice","proceedToCheckout","_this$props$cartTotal","cartTotal","totalPrice","productQuantity","currencyFormat","alert","changedProduct","_this$props3","newProduct","productToRemove","productToChange","_this$props4","FloatCart_CartProduct","installments","cart","productToAdd","total","loadCart","reduce","sum","greater","App","Shelf_Filter","components_Shelf","components_FloatCart","initialState","combineReducers","action","objectSpread","assign","services_store","JSON","parse","window","localStorage","getItem","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","subscribe","getState","persist","setItem","stringify","Root","children","_ref$initialState","es","ReactDOM","render","src_Root","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.e1ac95fc.chunk.js","sourcesContent":["export const formatPrice = (x, currency) => {\n  switch (currency) {\n    case 'BRL':\n      return x.toFixed(2).replace('.', ',');\n    default:\n      return x.toFixed(2);\n  }\n};\n\nexport const productsAPI =\n  'https://api.myjson.com/bins/qzuzi.json';\n// export const productsAPI = \"http://localhost:8001/api/products\";\n","import { FETCH_PRODUCTS } from './actionTypes';\nimport axios from 'axios';\n\nimport { productsAPI } from '../util';\n\nconst compare = {\n  lowestprice: (a, b) => {\n    if (a.price < b.price) return -1;\n    if (a.price > b.price) return 1;\n    return 0;\n  },\n  highestprice: (a, b) => {\n    if (a.price > b.price) return -1;\n    if (a.price < b.price) return 1;\n    return 0;\n  }\n};\n\nexport const fetchProducts = (filters, sortBy, callback) => dispatch => {\n  return axios\n    .get(productsAPI)\n    .then(res => {\n      let products = res.data;\n\n      if (!!filters && filters.length > 0) {\n        products = products.filter(p =>\n          filters.find(f => p.availableSizes.find(size => size === f))\n        );\n      }\n\n      if (!!sortBy) {\n        products = products.sort(compare[sortBy]);\n      }\n\n      if (!!callback) {\n        callback();\n      }\n\n      return dispatch({\n        type: FETCH_PRODUCTS,\n        payload: products\n      });\n    })\n    .catch(err => {\n      console.log('Could not fetch products. Try again later.');\n    });\n};\n","import React from 'react';\n\nimport './style.scss';\n\nexport default () => (\n  <div className=\"spinner lds-ring\">\n    <div />\n    <div />\n    <div />\n    <div />\n  </div>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Selectbox = ({ options, classes, handleOnChange }) => {\n  const createOptions = options =>\n    options.map(o => (\n      <option value={o.value} key={o.value}>\n        {o.label}\n      </option>\n    ));\n\n  return (\n    <select onChange={e => handleOnChange(e.target.value)} className={classes}>\n      {createOptions(options)}\n    </select>\n  );\n};\n\nSelectbox.propTypes = {\n  options: PropTypes.array.isRequired,\n  classes: PropTypes.string,\n  handleOnChange: PropTypes.func.isRequired\n};\n\nexport default Selectbox;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { updateSort } from '../../../services/sort/actions';\nimport Selectbox from '../../Selectbox';\n\nconst sortBy = [\n  { value: '', label: 'Select' },\n  { value: 'lowestprice', label: 'Lowest to highest' },\n  { value: 'highestprice', label: 'Highest to lowest' }\n];\n\nconst Sort = ({ updateSort, sort }) => (\n  <div className=\"sort\">\n    Order by\n    <Selectbox options={sortBy} handleOnChange={value => updateSort(value)} />\n  </div>\n);\n\nSort.propTypes = {\n  updateSort: PropTypes.func.isRequired,\n  sort: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  sort: state.sort.type\n});\n\nexport default connect(\n  mapStateToProps,\n  { updateSort }\n)(Sort);\n","import { UPDATE_SORT } from './actionTypes';\n\nexport const updateSort = sort => ({\n  type: UPDATE_SORT,\n  payload: sort\n});\n","export const UPDATE_SORT = 'UPDATE_SORT';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Sort from '../Sort';\n\nconst ShelfHeader = props => {\n  return (\n    <div className=\"shelf-container-header\">\n      <small className=\"products-found\">\n        <span>{props.productsLength} Product(s) found.</span>\n      </small>\n      <Sort />\n    </div>\n  );\n};\n\nShelfHeader.propTypes = {\n  productsLength: PropTypes.number.isRequired\n};\n\nexport default ShelfHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Thumb = props => (\n  <div className={props.classes}>\n    <img src={props.src} alt={props.alt} title={props.title} />\n  </div>\n);\n\nThumb.propTypes = {\n  alt: PropTypes.string,\n  title: PropTypes.string,\n  classes: PropTypes.string,\n  src: PropTypes.string.isRequired\n};\n\nexport default Thumb;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport Thumb from '../../../Thumb';\nimport { formatPrice } from '../../../../services/util';\nimport { addProduct } from '../../../../services/cart/actions';\n\nconst Product = ({ product, addProduct }) => {\n  product.quantity = 1;\n\n  let formattedPrice = formatPrice(product.price, product.currencyId);\n\n  return (\n    <div\n      className=\"shelf-item\"\n      onClick={() => addProduct(product)}\n      data-sku={product.id}\n    >\n      <Thumb\n        classes=\"shelf-item__thumb\"\n        src={product.img_url}\n        alt={product.name}\n      />\n      <p className=\"shelf-item__title\">{product.name}</p>\n      <div className=\"shelf-item__price\">\n        <div className=\"val\">\n          <small>Rs</small>\n          <b>{formattedPrice.substr(0, formattedPrice.length - 3)}</b>\n          <span>{formattedPrice.substr(formattedPrice.length - 3, 3)}</span>\n        </div>\n      </div>\n      <div className=\"shelf-item__buy-btn\">Add to cart</div>\n    </div>\n  );\n};\n\nProduct.propTypes = {\n  product: PropTypes.object.isRequired,\n  addProduct: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { addProduct }\n)(Product);\n","import { LOAD_CART, ADD_PRODUCT, REMOVE_PRODUCT, CHANGE_PRODUCT_QUANTITY } from './actionTypes';\n\nexport const loadCart = products => ({\n  type: LOAD_CART,\n  payload: products\n});\n\nexport const addProduct = product => ({\n  type: ADD_PRODUCT,\n  payload: product\n});\n\nexport const removeProduct = product => ({\n  type: REMOVE_PRODUCT,\n  payload: product\n});\n\nexport const changeProductQuantity = product => ({\n  type: CHANGE_PRODUCT_QUANTITY,\n  payload: product\n});","export const LOAD_CART = 'LOAD_CART';\nexport const ADD_PRODUCT = 'ADD_PRODUCT';\nexport const REMOVE_PRODUCT = 'REMOVE_PRODUCT';\nexport const CHANGE_PRODUCT_QUANTITY = 'CHANGE_PRODUCT_QUANTITY';\nexport const UPDATE_CART = 'UPDATE_CART';\n","import React from 'react';\n\nimport Product from './Product';\n\nconst ProductList = ({ products }) => {\n  return products.map(p => {\n    return <Product product={p} key={p.id} />;\n  });\n};\n\nexport default ProductList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { fetchProducts } from '../../services/shelf/actions';\n\nimport Spinner from '../Spinner';\nimport ShelfHeader from './ShelfHeader';\nimport ProductList from './ProductList';\n\nimport './style.scss';\n\nclass Shelf extends Component {\n  static propTypes = {\n    fetchProducts: PropTypes.func.isRequired,\n    products: PropTypes.array.isRequired,\n    filters: PropTypes.array,\n    sort: PropTypes.string\n  };\n\n  state = {\n    isLoading: false\n  };\n\n  componentDidMount() {\n    this.handleFetchProducts();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { filters: nextFilters, sort: nextSort } = nextProps;\n    const { filters } = this.props;\n    if (nextFilters.length !== filters.length) {\n      this.handleFetchProducts(nextFilters, undefined);\n    }\n\n    if (nextSort !== this.props.sort) {\n      this.handleFetchProducts(undefined, nextSort);\n    }\n  }\n\n  handleFetchProducts = (\n    filters = this.props.filters,\n    sort = this.props.sort\n  ) => {\n    this.setState({ isLoading: true });\n    this.props.fetchProducts(filters, sort, () => {\n      this.setState({ isLoading: false });\n    });\n  };\n\n  render() {\n    const { products } = this.props;\n    const { isLoading } = this.state;\n\n    return (\n      <React.Fragment>\n        {isLoading && <Spinner />}\n        <div className=\"shelf-container\">\n          <ShelfHeader productsLength={products.length} />\n          <ProductList products={products} />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  products: state.shelf.products,\n  filters: state.filters.items,\n  sort: state.sort.type\n});\n\nexport default connect(\n  mapStateToProps,\n  { fetchProducts }\n)(Shelf);\n","export const FETCH_PRODUCTS = 'FETCH_PRODUCTS';\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Checkbox extends Component {\n  static propTypes = {\n    label: PropTypes.string.isRequired,\n    handleCheckboxChange: PropTypes.func.isRequired\n  };\n\n  state = {\n    isChecked: false\n  };\n\n  toggleCheckboxChange = () => {\n    const { handleCheckboxChange, label } = this.props;\n\n    this.setState(({ isChecked }) => ({\n      isChecked: !isChecked\n    }));\n\n    handleCheckboxChange(label);\n  };\n\n  render() {\n    const { label, classes } = this.props;\n    const { isChecked } = this.state;\n\n    return (\n      <div className={classes}>\n        <label>\n          <input\n            type=\"checkbox\"\n            value={label}\n            checked={isChecked}\n            onChange={this.toggleCheckboxChange}\n          />\n\n          <span className=\"checkmark\">{label}</span>\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default Checkbox;\n","import React from 'react';\n\nconst StarButton = () => (\n  <div className=\"star-button-container\">\n    <small>Leave a star on Github if this repository was useful :)</small>\n    <a\n      className=\"github-button\"\n      href=\"https://github.com/jeffersonRibeiro/react-shopping-cart\"\n      data-icon=\"octicon-star\"\n      data-size=\"large\"\n      data-show-count=\"true\"\n      aria-label=\"Star jeffersonRibeiro/react-shopping-cart on GitHub\"\n    >\n      Star\n    </a>\n  </div>\n);\n\nexport default StarButton;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { updateFilters } from '../../../services/filters/actions';\nimport Checkbox from '../../Checkbox';\nimport GithubStarButton from '../../github/StarButton';\n\nimport './style.scss';\n\nconst availableSizes = ['XS', 'S', 'M', 'ML', 'L', 'XL', 'XXL'];\n\nclass Filter extends Component {\n  static propTypes = {\n    updateFilters: PropTypes.func.isRequired,\n    filters: PropTypes.array\n  };\n\n  componentDidMount() {\n    this.selectedCheckboxes = new Set();\n  }\n\n  toggleCheckbox = label => {\n    if (this.selectedCheckboxes.has(label)) {\n      this.selectedCheckboxes.delete(label);\n    } else {\n      this.selectedCheckboxes.add(label);\n    }\n\n    this.props.updateFilters(Array.from(this.selectedCheckboxes));\n  };\n\n  createCheckbox = label => (\n    <Checkbox\n      classes=\"filters-available-size\"\n      label={label}\n      handleCheckboxChange={this.toggleCheckbox}\n      key={label}\n    />\n  );\n\n  createCheckboxes = () => availableSizes.map(this.createCheckbox);\n\n  render() {\n    return (\n      <div className=\"filters\">\n        <h4 className=\"title\">Sizes:</h4>\n        {this.createCheckboxes()}\n        <GithubStarButton />\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { updateFilters }\n)(Filter);\n","import { UPDATE_FILTER } from './actionTypes';\n\nexport const updateFilters = filters => ({\n  type: UPDATE_FILTER,\n  payload: filters\n});\n","export const UPDATE_FILTER = 'UPDATE_FILTER';\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\nimport './style.css';\n\nexport default (props) => (\n    <div className=\"topHeader\"><FontAwesomeIcon icon={faStar} /></div>\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Thumb from './../../Thumb';\nimport { formatPrice } from '../../../services/util';\n\nclass CartProduct extends Component {\n  static propTypes = {\n    product: PropTypes.object.isRequired,\n    removeProduct: PropTypes.func.isRequired,\n    changeProductQuantity: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      product: this.props.product,\n      isMouseOver: false\n    };\n  }\n\n  handleMouseOver = () => {\n    this.setState({ isMouseOver: true });\n  };\n\n  handleMouseOut = () => {\n    this.setState({ isMouseOver: false });\n  };\n\n  handleOnIncrease = () => {\n    const { changeProductQuantity } = this.props;\n    const { product } = this.state;\n    product.quantity = product.quantity + 1;\n    changeProductQuantity(product);\n  }\n\n  handleOnDecrease = () => {\n    const { changeProductQuantity } = this.props;\n    const { product } = this.state;\n    product.quantity = product.quantity - 1;\n    changeProductQuantity(product);\n  }\n\n  render() {\n    const { removeProduct } = this.props;\n    const { product } = this.state;\n\n    const classes = ['shelf-item'];\n\n    if (!!this.state.isMouseOver) {\n      classes.push('shelf-item--mouseover');\n    }\n\n    return (\n      <div className={classes.join(' ')}>\n        <div\n          className=\"shelf-item__del\"\n          onMouseOver={() => this.handleMouseOver()}\n          onMouseOut={() => this.handleMouseOut()}\n          onClick={() => removeProduct(product)}\n        />\n        <Thumb\n          classes=\"shelf-item__thumb\"\n          src={product.img_url}\n          alt={product.name}\n        />\n        <div className=\"shelf-item__details\">\n          <p className=\"title\">{product.name}</p>\n          <p className=\"desc\">\n            Quantity: {product.quantity}\n          </p>\n        </div>\n        <div className=\"shelf-item__price\">\n          <p>{`Rs ${formatPrice(product.price, '$')}`}</p>\n          <div>\n            <button onClick={this.handleOnDecrease} disabled={product.quantity === 1 ? true : false} className=\"change-product-button\">-</button>\n            <button onClick={this.handleOnIncrease} className=\"change-product-button\">+</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CartProduct;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { loadCart, removeProduct, changeProductQuantity } from '../../services/cart/actions';\nimport { updateCart } from '../../services/total/actions';\nimport CartProduct from './CartProduct';\nimport { formatPrice } from '../../services/util';\n\nimport './style.scss';\n\nclass FloatCart extends Component {\n  static propTypes = {\n    loadCart: PropTypes.func.isRequired,\n    updateCart: PropTypes.func.isRequired,\n    cartProducts: PropTypes.array.isRequired,\n    newProduct: PropTypes.object,\n    removeProduct: PropTypes.func,\n    productToRemove: PropTypes.object,\n    changeProductQuantity: PropTypes.func,\n    productToChange: PropTypes.object,\n  };\n\n  state = {\n    isOpen: false\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.newProduct !== this.props.newProduct) {\n      this.addProduct(nextProps.newProduct);\n    }\n\n    if (nextProps.productToRemove !== this.props.productToRemove) {\n      this.removeProduct(nextProps.productToRemove);\n    }\n\n    if (nextProps.productToChange !== this.props.productToChange) {\n      this.changeProductQuantity(nextProps.productToChange);\n    }\n  }\n\n  openFloatCart = () => {\n    this.setState({ isOpen: true });\n  };\n\n  closeFloatCart = () => {\n    this.setState({ isOpen: false });\n  };\n\n  addProduct = product => {\n    const { cartProducts, updateCart } = this.props;\n    let productAlreadyInCart = false;\n\n    cartProducts.forEach(cp => {\n      if (cp.id === product.id) {\n        cp.quantity += product.quantity;\n        productAlreadyInCart = true;\n      }\n    });\n\n    if (!productAlreadyInCart) {\n      cartProducts.push(product);\n    }\n\n    updateCart(cartProducts);\n    this.openFloatCart();\n  };\n\n  removeProduct = product => {\n    const { cartProducts, updateCart } = this.props;\n\n    const index = cartProducts.findIndex(p => p.id === product.id);\n    if (index >= 0) {\n      cartProducts.splice(index, 1);\n      updateCart(cartProducts);\n    }\n  };\n\n  proceedToCheckout = () => {\n    const {\n      totalPrice,\n      productQuantity,\n      currencyFormat,\n      currencyId\n    } = this.props.cartTotal;\n\n    if (!productQuantity) {\n      alert('Add some product in the cart!');\n    } else {\n      alert(\n        `Checkout - Subtotal: ${currencyFormat} ${formatPrice(\n          totalPrice,\n          currencyId\n        )}`\n      );\n    }\n  };\n\n  changeProductQuantity = changedProduct => {\n    const { cartProducts, updateCart } = this.props;\n\n    const product = cartProducts.find(p => p.id === changedProduct.id);\n    product.quantity = changedProduct.quantity;\n    if (product.quantity <= 0) {\n      this.removeProduct(product);\n    }\n    updateCart(cartProducts);\n  }\n\n  render() {\n    const { cartTotal, cartProducts, removeProduct, changeProductQuantity } = this.props;\n\n    const products = cartProducts.map(p => {\n      return (\n        <CartProduct product={p} removeProduct={removeProduct} changeProductQuantity={changeProductQuantity} key={p.id} />\n      );\n    });\n\n    let classes = ['float-cart'];\n\n    if (!!this.state.isOpen) {\n      classes.push('float-cart--open');\n    }\n\n    return (\n      <div className={classes.join(' ')}>\n        {/* If cart open, show close (x) button */}\n        {this.state.isOpen && (\n          <div\n            onClick={() => this.closeFloatCart()}\n            className=\"float-cart__close-btn\"\n          >\n            X\n          </div>\n        )}\n\n        {/* If cart is closed, show bag with quantity of product and open cart action */}\n        {!this.state.isOpen && (\n          <span\n            onClick={() => this.openFloatCart()}\n            className=\"bag bag--float-cart-closed\"\n          >\n            <span className=\"bag__quantity\">{cartTotal.productQuantity}</span>\n          </span>\n        )}\n\n        <div className=\"float-cart__content\">\n          <div className=\"float-cart__header\">\n            <span className=\"bag\">\n              <span className=\"bag__quantity\">{cartTotal.productQuantity}</span>\n            </span>\n            <span className=\"header-title\">Cart</span>\n          </div>\n\n          <div className=\"float-cart__shelf-container\">\n            {products}\n            {!products.length && (\n              <p className=\"shelf-empty\">\n                Add some products in the cart <br />\n                :)\n              </p>\n            )}\n          </div>\n\n          <div className=\"float-cart__footer\">\n            <div className=\"sub\">SUBTOTAL</div>\n            <div className=\"sub-price\">\n              <p className=\"sub-price__val\">\n                {`Rs ${formatPrice(\n                  cartTotal.totalPrice,\n                  cartTotal.currencyId\n                )}`}\n              </p>\n              <small className=\"sub-price__installment\">\n                {!!cartTotal.installments && (\n                  <span>\n                    {`OR UP TO ${cartTotal.installments} x ${\n                      cartTotal.currencyFormat\n                    } ${formatPrice(\n                      cartTotal.totalPrice / cartTotal.installments,\n                      cartTotal.currencyId\n                    )}`}\n                  </span>\n                )}\n              </small>\n            </div>\n            <div onClick={() => this.proceedToCheckout()} className=\"buy-btn\">\n              Checkout\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  cartProducts: state.cart.products,\n  newProduct: state.cart.productToAdd,\n  productToRemove: state.cart.productToRemove,\n  productToChange: state.cart.productToChange,\n  cartTotal: state.total.data\n});\n\nexport default connect(\n  mapStateToProps,\n  { loadCart, updateCart, removeProduct, changeProductQuantity }\n)(FloatCart);\n","import { UPDATE_CART } from './actionTypes';\n\nexport const updateCart = cartProducts => dispatch => {\n  let productQuantity = cartProducts.reduce((sum, p) => {\n    sum += p.quantity;\n    return sum;\n  }, 0);\n\n  let totalPrice = cartProducts.reduce((sum, p) => {\n    sum += p.price * p.quantity;\n    return sum;\n  }, 0);\n\n  let installments = cartProducts.reduce((greater, p) => {\n    greater = p.installments > greater ? p.installments : greater;\n    return greater;\n  }, 0);\n\n  let cartTotal = {\n    productQuantity,\n    installments,\n    totalPrice,\n    currencyId: 'USD',\n    currencyFormat: '$'\n  };\n\n  dispatch({\n    type: UPDATE_CART,\n    payload: cartTotal\n  });\n};\n","export const UPDATE_CART = 'UPDATE_CART';\n","import React from 'react';\n\nimport Shelf from '../Shelf';\nimport Filter from '../Shelf/Filter';\nimport GithubCorner from '../github/Top';\nimport FloatCart from '../FloatCart';\n\nconst App = () => (\n  <React.Fragment>\n    <GithubCorner />\n    <main>\n      <Filter />\n      <Shelf />\n      <FloatCart />\n    </main>\n  </React.Fragment>\n);\n\nexport default App;\n","import { FETCH_PRODUCTS } from './actionTypes';\n\nconst initialState = {\n  products: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_PRODUCTS:\n      return {\n        ...state,\n        products: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { LOAD_CART, ADD_PRODUCT, REMOVE_PRODUCT, CHANGE_PRODUCT_QUANTITY } from './actionTypes';\n\nconst initialState = {\n  products: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case LOAD_CART:\n      return {\n        ...state,\n        products: action.payload\n      };\n    case ADD_PRODUCT:\n      return {\n        ...state,\n        productToAdd: Object.assign({}, action.payload)\n      };\n    case REMOVE_PRODUCT:\n      return {\n        ...state,\n        productToRemove: Object.assign({}, action.payload)\n      };\n    case CHANGE_PRODUCT_QUANTITY:\n      return {\n        ...state,\n        productToChange: Object.assign({}, action.payload)\n      };\n    default:\n      return state;\n  }\n}\n","import { UPDATE_CART } from './actionTypes';\n\nconst initialState = {\n  data: {\n    productQuantity: 0,\n    installments: 0,\n    totalPrice: 0,\n    currencyId: 'USD',\n    currencyFormat: '$'\n  }\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_CART:\n      return {\n        ...state,\n        data: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { UPDATE_FILTER } from './actionTypes';\n\nconst initialState = {\n  items: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_FILTER:\n      return {\n        ...state,\n        items: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { UPDATE_SORT } from './actionTypes';\n\nconst initialState = {\n  type: ''\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_SORT:\n      return {\n        ...state,\n        type: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport shelfReducer from './shelf/reducer';\nimport cartReducer from './cart/reducer';\nimport totalReducer from './total/reducer';\nimport filtersReducer from './filters/reducer';\nimport sortReducer from './sort/reducer';\n\nexport default combineReducers({\n  shelf: shelfReducer,\n  cart: cartReducer,\n  total: totalReducer,\n  filters: filtersReducer,\n  sort: sortReducer\n});\n","import { compose, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nexport default initialState => {\n  initialState =\n    JSON.parse(window.localStorage.getItem('state')) || initialState;\n  const middleware = [thunk];\n\n  const store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n      applyMiddleware(...middleware)\n      /* window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION__() */\n    )\n  );\n\n  store.subscribe(() => {\n    const state = store.getState();\n    const persist = {\n      cart: state.cart,\n      total: state.total\n    };\n\n    window.localStorage.setItem('state', JSON.stringify(persist));\n  });\n\n  return store;\n};\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport store from './services/store';\n\nconst Root = ({ children, initialState = {} }) => (\n  <Provider store={store(initialState)}>{children}</Provider>\n);\n\nexport default Root;\n","import 'babel-polyfill'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\nimport Root from './Root';\n\nimport './index.scss';\n\nReactDOM.render(\n  <Root>\n    <App />\n  </Root>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
{"version":3,"sources":["services/util.js","services/shelf/actions.js","components/Spinner/index.js","components/Shelf/ShelfHeader/index.js","components/Thumb/index.js","components/Shelf/ProductList/Product/index.js","services/cart/actions.js","services/cart/actionTypes.js","components/Shelf/ProductList/index.js","components/Shelf/index.js","services/shelf/actionTypes.js","components/Shelf/Filter/index.js","services/filters/actions.js","services/filters/actionTypes.js","components/Selectbox/index.js","components/Shelf/Sort/index.js","services/sort/actions.js","services/sort/actionTypes.js","components/github/Top.js","components/FloatCart/CartProduct/index.js","components/FloatCart/index.js","services/total/actions.js","services/total/actionTypes.js","components/App/index.js","services/shelf/reducer.js","services/cart/reducer.js","services/total/reducer.js","services/filters/reducer.js","services/sort/reducer.js","services/reducers.js","services/store.js","Root.js","index.js"],"names":["formatPrice","x","currency","toFixed","replace","compare","lowestprice","a","b","price","highestprice","discount","Spinner","react_default","createElement","className","ShelfHeader","props","productsLength","Thumb","classes","src","alt","title","connect","addProduct","product","type","payload","_ref","quantity","formattedPrice","currencyId","onClick","data-sku","id","components_Thumb","img_url","name","substr","length","ProductList","products","map","p","ProductList_Product","key","Shelf","state","isLoading","handleFetchProducts","filters","arguments","undefined","_this","sort","setState","fetchProducts","this","nextProps","nextFilters","nextSort","Fragment","Shelf_ShelfHeader","Shelf_ProductList","Component","shelf","items","sortBy","callback","dispatch","axios","get","then","res","data","lastFilterVal","filter","catch","err","console","log","Filter","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleCheckbox","value","selectedCheckboxes","has","delete","add","updateFilters","Array","from","Set","react_rangeslider_lib_default","min","max","labels","0","1000","onChange","Selectbox","options","handleOnChange","e","target","o","label","createOptions","updateSort","components_Selectbox","Top","href","index_es","icon","faStar","Shelf_Sort","CartProduct","handleMouseOver","isMouseOver","handleMouseOut","handleOnIncrease","changeProductQuantity","handleOnDecrease","_this2","removeProduct","push","join","onMouseOver","onMouseOut","concat","disabled","FloatCart","isOpen","openFloatCart","closeFloatCart","_this$props","cartProducts","updateCart","productAlreadyInCart","forEach","cp","_this$props2","index","findIndex","splice","proceedToCheckout","_this$props$cartTotal","cartTotal","totalPrice","productQuantity","currencyFormat","alert","changedProduct","_this$props3","find","newProduct","productToRemove","productToChange","_this$props4","FloatCart_CartProduct","installments","cart","productToAdd","total","loadCart","reduce","sum","greater","App","Shelf_Filter","components_Shelf","components_FloatCart","initialState","combineReducers","action","objectSpread","assign","services_store","JSON","parse","window","localStorage","getItem","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","subscribe","getState","persist","setItem","stringify","Root","children","_ref$initialState","es","ReactDOM","render","src_Root","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.268e7e78.chunk.js","sourcesContent":["export const formatPrice = (x, currency) => {\n  switch (currency) {\n    case 'BRL':\n      return x.toFixed(2).replace('.', ',');\n    default:\n      return x.toFixed(2);\n  }\n};\n\nexport const productsAPI =\n  'https://api.myjson.com/bins/qzuzi.json';\n// export const productsAPI = \"http://localhost:8001/api/products\";\n","import { FETCH_PRODUCTS } from './actionTypes';\nimport axios from 'axios';\n\nimport { productsAPI } from '../util';\n\nconst compare = {\n  lowestprice: (a, b) => {\n    if (a.price < b.price) return -1;\n    if (a.price > b.price) return 1;\n    return 0;\n  },\n  highestprice: (a, b) => {\n    if (a.price > b.price) return -1;\n    if (a.price < b.price) return 1;\n    return 0;\n  },\n    discount: (a, b) => {\n        if (a.discount > b.discount) return -1;\n        if (a.discount < b.discount) return 1;\n        return 0;\n    }\n\n};\n\nexport const fetchProducts = (filters, sortBy, callback) => dispatch => {\n  return axios\n    .get(productsAPI)\n    .then(res => {\n      let products = res.data;\n      let lastFilterVal = filters[filters.length - 1];\n      if (!!filters && filters.length > 0) {\n        products = products.filter(p => lastFilterVal >= p.price);\n      }\n\n      if (!!sortBy) {\n        products = products.sort(compare[sortBy]);\n      }\n\n      if (!!callback) {\n        callback();\n      }\n\n      return dispatch({\n        type: FETCH_PRODUCTS,\n        payload: products\n      });\n    })\n    .catch(err => {\n      console.log('Could not fetch products. Try again later.');\n    });\n};\n","import React from 'react';\n\nimport './style.scss';\n\nexport default () => (\n  <div className=\"spinner lds-ring\">\n    <div />\n    <div />\n    <div />\n    <div />\n  </div>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ShelfHeader = props => {\n  return (\n    <div className=\"shelf-container-header\">\n      <small className=\"products-found\">\n        <span>{props.productsLength} Product(s) found.</span>\n      </small>\n    </div>\n  );\n};\n\nShelfHeader.propTypes = {\n  productsLength: PropTypes.number.isRequired\n};\n\nexport default ShelfHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Thumb = props => (\n  <div className={props.classes}>\n    <img src={props.src} alt={props.alt} title={props.title} />\n  </div>\n);\n\nThumb.propTypes = {\n  alt: PropTypes.string,\n  title: PropTypes.string,\n  classes: PropTypes.string,\n  src: PropTypes.string.isRequired\n};\n\nexport default Thumb;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport Thumb from '../../../Thumb';\nimport { formatPrice } from '../../../../services/util';\nimport { addProduct } from '../../../../services/cart/actions';\n\nconst Product = ({ product, addProduct }) => {\n  product.quantity = 1;\n\n  let formattedPrice = formatPrice(product.price, product.currencyId);\n\n  return (\n    <div\n      className=\"shelf-item\"\n      onClick={() => addProduct(product)}\n      data-sku={product.id}\n    >\n      <Thumb\n        classes=\"shelf-item__thumb\"\n        src={product.img_url}\n        alt={product.name}\n      />\n      <p className=\"shelf-item__title\">{product.name}</p>\n      <div className=\"shelf-item__price\">\n          {product.discount > 0 ? (\n            <div className=\"prodPrice\">\n              <div className=\"val discountedPrice\">\n                <small>Rs</small>\n                <b>{formattedPrice.substr(0, formattedPrice.length - 3)}</b>\n              </div>\n              <div className=\"val originalPrice\">\n                <strike>\n                  <small>Rs</small>\n                  <b>{(product.price/((100 - product.discount)/100)).toFixed(0)}</b>\n                </strike>\n                <span className=\"percentOff\">{product.discount}% off</span>\n              </div>\n            </div>\n            ) : (\n            <div className=\"val discountedPrice\">\n              <small>Rs</small>\n              <b>{formattedPrice.substr(0, formattedPrice.length - 3)}</b>\n            </div>\n            )\n            }\n      </div>\n      <div className=\"shelf-item__buy-btn\">Add to cart</div>\n    </div>\n  );\n};\n\nProduct.propTypes = {\n  product: PropTypes.object.isRequired,\n  addProduct: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { addProduct }\n)(Product);\n","import { LOAD_CART, ADD_PRODUCT, REMOVE_PRODUCT, CHANGE_PRODUCT_QUANTITY } from './actionTypes';\n\nexport const loadCart = products => ({\n  type: LOAD_CART,\n  payload: products\n});\n\nexport const addProduct = product => ({\n  type: ADD_PRODUCT,\n  payload: product\n});\n\nexport const removeProduct = product => ({\n  type: REMOVE_PRODUCT,\n  payload: product\n});\n\nexport const changeProductQuantity = product => ({\n  type: CHANGE_PRODUCT_QUANTITY,\n  payload: product\n});","export const LOAD_CART = 'LOAD_CART';\nexport const ADD_PRODUCT = 'ADD_PRODUCT';\nexport const REMOVE_PRODUCT = 'REMOVE_PRODUCT';\nexport const CHANGE_PRODUCT_QUANTITY = 'CHANGE_PRODUCT_QUANTITY';\nexport const UPDATE_CART = 'UPDATE_CART';\n","  import React from 'react';\n\nimport Product from './Product';\n\nconst ProductList = ({ products }) => {\n  return products.map(p => {\n    return <Product product={p} key={p.id} />;\n  });\n};\n\nexport default ProductList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { fetchProducts } from '../../services/shelf/actions';\n\nimport Spinner from '../Spinner';\nimport ShelfHeader from './ShelfHeader';\nimport ProductList from './ProductList';\n\nimport './style.scss';\n\nclass Shelf extends Component {\n  static propTypes = {\n    fetchProducts: PropTypes.func.isRequired,\n    products: PropTypes.array.isRequired,\n    filters: PropTypes.array,\n    sort: PropTypes.string\n  };\n\n  state = {\n    isLoading: false\n  };\n\n  componentDidMount() {\n    this.handleFetchProducts();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { filters: nextFilters, sort: nextSort } = nextProps;\n    const { filters } = this.props;\n    if (nextFilters.length !== filters.length) {\n      this.handleFetchProducts(nextFilters, undefined);\n    }\n\n    if (nextSort !== this.props.sort) {\n      this.handleFetchProducts(undefined, nextSort);\n    }\n  }\n\n  handleFetchProducts = (\n    filters = this.props.filters,\n    sort = this.props.sort\n  ) => {\n    this.setState({ isLoading: true });\n    this.props.fetchProducts(filters, sort, () => {\n      this.setState({ isLoading: false });\n    });\n  };\n\n  render() {\n    const { products } = this.props;\n    const { isLoading } = this.state;\n\n    return (\n      <React.Fragment>\n        {isLoading && <Spinner />}\n        <div className=\"shelf-container\">\n          <ShelfHeader productsLength={products.length} />\n          <ProductList products={products} />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  products: state.shelf.products,\n  filters: state.filters.items,\n  sort: state.sort.type\n});\n\nexport default connect(\n  mapStateToProps,\n  { fetchProducts }\n)(Shelf);\n","export const FETCH_PRODUCTS = 'FETCH_PRODUCTS';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateFilters } from '../../../services/filters/actions';\nimport './style.scss';\nimport Slider from 'react-rangeslider'\nimport 'react-rangeslider/lib/index.css';\n\nclass Filter extends Component {\n\n    constructor(props) {\n      super(props);\n\n      this.state = {\n          value: 0\n      }\n    }\n\n    componentDidMount() {\n        this.selectedCheckboxes = new Set();\n    }\n\n    toggleCheckbox = value => {\n        this.setState({\n          value: value\n        })\n\n        if (this.selectedCheckboxes.has(value)) {\n          this.selectedCheckboxes.delete(value);\n        } else {\n          this.selectedCheckboxes.add(value);\n        }\n        this.props.updateFilters(Array.from(this.selectedCheckboxes));\n    };\n\n\n  render() {\n    const horizontalLabels = {\n      0: '0',\n      1000: '1000'\n    }\n    const { value } = this.state;\n    return (\n        <div className=\"filters\">\n        <h4 className=\"title\">Price:</h4>\n            <div className='slider'>\n              <Slider\n                  min={0}\n                  max={1000}\n                  labels={horizontalLabels}\n                  value={value}\n                  onChange={this.toggleCheckbox}\n              />\n                <div className='rangeValueFilter'>{value}</div>\n            </div>\n        </div>\n    );\n  }\n}\n\n\nexport default connect(\n  null,\n  { updateFilters }\n)(Filter);\n","import { UPDATE_FILTER } from './actionTypes';\n\nexport const updateFilters = filters => ({\n  type: UPDATE_FILTER,\n  payload: filters\n});\n","export const UPDATE_FILTER = 'UPDATE_FILTER';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Selectbox = ({ options, classes, handleOnChange }) => {\n  const createOptions = options =>\n    options.map(o => (\n      <option value={o.value} key={o.value}>\n        {o.label}\n      </option>\n    ));\n\n  return (\n    <select onChange={e => handleOnChange(e.target.value)} className={classes}>\n      {createOptions(options)}\n    </select>\n  );\n};\n\nSelectbox.propTypes = {\n  options: PropTypes.array.isRequired,\n  classes: PropTypes.string,\n  handleOnChange: PropTypes.func.isRequired\n};\n\nexport default Selectbox;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { updateSort } from '../../../services/sort/actions';\nimport Selectbox from '../../Selectbox';\n\nconst sortBy = [\n  { value: '', label: 'Select' },\n  { value: 'lowestprice', label: 'Lowest to highest' },\n  { value: 'highestprice', label: 'Highest to lowest' },\n    {value: 'discount', label: 'Discount'}\n];\n\nconst Sort = ({ updateSort, sort }) => (\n  <div className=\"sort\">\n    <label>Sort By</label>\n    <Selectbox options={sortBy} handleOnChange={value => updateSort(value)} />\n  </div>\n);\n\nSort.propTypes = {\n  updateSort: PropTypes.func.isRequired,\n  sort: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  sort: state.sort.type\n});\n\nexport default connect(\n  mapStateToProps,\n  { updateSort }\n)(Sort);\n","import { UPDATE_SORT } from './actionTypes';\n\nexport const updateSort = sort => ({\n  type: UPDATE_SORT,\n  payload: sort\n});\n","export const UPDATE_SORT = 'UPDATE_SORT';\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\nimport './style.css';\nimport Sort from '../Shelf/Sort';\n\nexport default (props) => (\n    <div className=\"topHeader\"><a href=\"/shoppingCart\"><FontAwesomeIcon icon={faStar} /></a><Sort/></div>\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Thumb from './../../Thumb';\nimport { formatPrice } from '../../../services/util';\n\nclass CartProduct extends Component {\n  static propTypes = {\n    product: PropTypes.object.isRequired,\n    removeProduct: PropTypes.func.isRequired,\n    changeProductQuantity: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      product: this.props.product,\n      isMouseOver: false\n    };\n  }\n\n  handleMouseOver = () => {\n    this.setState({ isMouseOver: true });\n  };\n\n  handleMouseOut = () => {\n    this.setState({ isMouseOver: false });\n  };\n\n  handleOnIncrease = () => {\n    const { changeProductQuantity } = this.props;\n    const { product } = this.state;\n    product.quantity = product.quantity + 1;\n    changeProductQuantity(product);\n  }\n\n  handleOnDecrease = () => {\n    const { changeProductQuantity } = this.props;\n    const { product } = this.state;\n    product.quantity = product.quantity - 1;\n    changeProductQuantity(product);\n  }\n\n  render() {\n    const { removeProduct } = this.props;\n    const { product } = this.state;\n\n    const classes = ['shelf-item'];\n\n    if (!!this.state.isMouseOver) {\n      classes.push('shelf-item--mouseover');\n    }\n\n    return (\n      <div className={classes.join(' ')}>\n        <div\n          className=\"shelf-item__del\"\n          onMouseOver={() => this.handleMouseOver()}\n          onMouseOut={() => this.handleMouseOut()}\n          onClick={() => removeProduct(product)}\n        />\n        <Thumb\n          classes=\"shelf-item__thumb\"\n          src={product.img_url}\n          alt={product.name}\n        />\n        <div className=\"shelf-item__details\">\n          <p className=\"title\">{product.name}</p>\n          <p className=\"desc\">\n            Quantity: {product.quantity}\n          </p>\n        </div>\n        <div className=\"shelf-item__price\">\n          <p>{`Rs ${formatPrice(product.price, '$')}`}</p>\n          <div>\n            <button onClick={this.handleOnDecrease} disabled={product.quantity === 1 ? true : false} className=\"change-product-button\">-</button>\n            <button onClick={this.handleOnIncrease} className=\"change-product-button\">+</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CartProduct;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { loadCart, removeProduct, changeProductQuantity } from '../../services/cart/actions';\nimport { updateCart } from '../../services/total/actions';\nimport CartProduct from './CartProduct';\nimport { formatPrice } from '../../services/util';\nimport './style.scss';\n\nclass FloatCart extends Component {\n  static propTypes = {\n    loadCart: PropTypes.func.isRequired,\n    updateCart: PropTypes.func.isRequired,\n    cartProducts: PropTypes.array.isRequired,\n    newProduct: PropTypes.object,\n    removeProduct: PropTypes.func,\n    productToRemove: PropTypes.object,\n    changeProductQuantity: PropTypes.func,\n    productToChange: PropTypes.object,\n  };\n\n  state = {\n    isOpen: false\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.newProduct !== this.props.newProduct) {\n      this.addProduct(nextProps.newProduct);\n    }\n\n    if (nextProps.productToRemove !== this.props.productToRemove) {\n      this.removeProduct(nextProps.productToRemove);\n    }\n\n    if (nextProps.productToChange !== this.props.productToChange) {\n      this.changeProductQuantity(nextProps.productToChange);\n    }\n  }\n\n  openFloatCart = () => {\n    this.setState({ isOpen: true });\n  };\n\n  closeFloatCart = () => {\n    this.setState({ isOpen: false });\n  };\n\n  addProduct = product => {\n    const { cartProducts, updateCart } = this.props;\n    let productAlreadyInCart = false;\n\n    cartProducts.forEach(cp => {\n      if (cp.id === product.id) {\n        cp.quantity += product.quantity;\n        productAlreadyInCart = true;\n      }\n    });\n\n    if (!productAlreadyInCart) {\n      cartProducts.push(product);\n    }\n\n    updateCart(cartProducts);\n    this.openFloatCart();\n  };\n\n  removeProduct = product => {\n    const { cartProducts, updateCart } = this.props;\n\n    const index = cartProducts.findIndex(p => p.id === product.id);\n    if (index >= 0) {\n      cartProducts.splice(index, 1);\n      updateCart(cartProducts);\n    }\n  };\n\n  proceedToCheckout = () => {\n    const {\n      totalPrice,\n      productQuantity,\n      currencyFormat,\n      currencyId\n    } = this.props.cartTotal;\n\n    if (!productQuantity) {\n      alert('Add some product in the cart!');\n    } else {\n      alert(\n        `Checkout - Subtotal: ${currencyFormat} ${formatPrice(\n          totalPrice,\n          currencyId\n        )}`\n      );\n    }\n  };\n\n  changeProductQuantity = changedProduct => {\n    const { cartProducts, updateCart } = this.props;\n\n    const product = cartProducts.find(p => p.id === changedProduct.id);\n    product.quantity = changedProduct.quantity;\n    if (product.quantity <= 0) {\n      this.removeProduct(product);\n    }\n    updateCart(cartProducts);\n  }\n\n  render() {\n    const { cartTotal, cartProducts, removeProduct, changeProductQuantity } = this.props;\n\n    const products = cartProducts.map(p => {\n      return (\n        <CartProduct product={p} removeProduct={removeProduct} changeProductQuantity={changeProductQuantity} key={p.id} />\n      );\n    });\n\n    let classes = ['float-cart'];\n\n    if (!!this.state.isOpen) {\n      classes.push('float-cart--open');\n    }\n\n    return (\n\n      <div className={classes.join(' ')}>\n        {/* If cart open, show close (x) button */}\n        {this.state.isOpen && (\n          <div\n            onClick={() => this.closeFloatCart()}\n            className=\"float-cart__close-btn\"\n          >\n            X\n          </div>\n        )}\n\n        {/* If cart is closed, show bag with quantity of product and open cart action */}\n        {!this.state.isOpen && (\n          <span\n            onClick={() => this.openFloatCart()}\n            className=\"bag bag--float-cart-closed\"\n          >\n            <span className=\"bag__quantity\">{cartTotal.productQuantity}</span>\n          </span>\n        )}\n\n        <div className=\"float-cart__content\">\n          <div className=\"float-cart__header\">\n            <span className=\"bag\">\n              <span className=\"bag__quantity\">{cartTotal.productQuantity}</span>\n            </span>\n            <span className=\"header-title\">Cart</span>\n          </div>\n\n          <div className=\"float-cart__shelf-container\">\n            {products}\n            {!products.length && (\n              <p className=\"shelf-empty\">\n                Add some products in the cart <br />\n                :)\n              </p>\n            )}\n          </div>\n\n          <div className=\"float-cart__footer\">\n            <div className=\"sub\">SUBTOTAL</div>\n            <div className=\"sub-price\">\n              <p className=\"sub-price__val\">\n                {`Rs ${formatPrice(\n                  cartTotal.totalPrice,\n                  cartTotal.currencyId\n                )}`}\n              </p>\n              <small className=\"sub-price__installment\">\n                {!!cartTotal.installments && (\n                  <span>\n                    {`OR UP TO ${cartTotal.installments} x ${\n                      cartTotal.currencyFormat\n                    } ${formatPrice(\n                      cartTotal.totalPrice / cartTotal.installments,\n                      cartTotal.currencyId\n                    )}`}\n                  </span>\n                )}\n              </small>\n            </div>\n            <div onClick={() => this.proceedToCheckout()} className=\"buy-btn\">\n              Checkout\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  cartProducts: state.cart.products,\n  newProduct: state.cart.productToAdd,\n  productToRemove: state.cart.productToRemove,\n  productToChange: state.cart.productToChange,\n  cartTotal: state.total.data\n});\n\nexport default connect(\n  mapStateToProps,\n  { loadCart, updateCart, removeProduct, changeProductQuantity }\n)(FloatCart);\n","import { UPDATE_CART } from './actionTypes';\n\nexport const updateCart = cartProducts => dispatch => {\n  let productQuantity = cartProducts.reduce((sum, p) => {\n    sum += p.quantity;\n    return sum;\n  }, 0);\n\n  let totalPrice = cartProducts.reduce((sum, p) => {\n    sum += p.price * p.quantity;\n    return sum;\n  }, 0);\n\n  let installments = cartProducts.reduce((greater, p) => {\n    greater = p.installments > greater ? p.installments : greater;\n    return greater;\n  }, 0);\n\n  let cartTotal = {\n    productQuantity,\n    installments,\n    totalPrice,\n    currencyId: 'USD',\n    currencyFormat: '$'\n  };\n\n  dispatch({\n    type: UPDATE_CART,\n    payload: cartTotal\n  });\n};\n","export const UPDATE_CART = 'UPDATE_CART';\n","import React from 'react';\nimport Shelf from '../Shelf';\nimport Filter from '../Shelf/Filter';\nimport GithubCorner from '../github/Top';\nimport FloatCart from '../FloatCart';\n\nconst App = () => (\n  <React.Fragment>\n    <GithubCorner />\n    <main>\n      <Filter/>\n      <Shelf />\n      <FloatCart />\n    </main>\n  </React.Fragment>\n);\n\nexport default App;\n","import { FETCH_PRODUCTS } from './actionTypes';\n\nconst initialState = {\n  products: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_PRODUCTS:\n      return {\n        ...state,\n        products: action.payload,\n\n      };\n    default:\n      return state;\n  }\n}\n","import { LOAD_CART, ADD_PRODUCT, REMOVE_PRODUCT, CHANGE_PRODUCT_QUANTITY } from './actionTypes';\n\nconst initialState = {\n  products: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case LOAD_CART:\n      return {\n        ...state,\n        products: action.payload\n      };\n    case ADD_PRODUCT:\n      return {\n        ...state,\n        productToAdd: Object.assign({}, action.payload)\n      };\n    case REMOVE_PRODUCT:\n      return {\n        ...state,\n        productToRemove: Object.assign({}, action.payload)\n      };\n    case CHANGE_PRODUCT_QUANTITY:\n      return {\n        ...state,\n        productToChange: Object.assign({}, action.payload)\n      };\n    default:\n      return state;\n  }\n}\n","import { UPDATE_CART } from './actionTypes';\n\nconst initialState = {\n  data: {\n    productQuantity: 0,\n    installments: 0,\n    totalPrice: 0,\n    currencyId: 'USD',\n    currencyFormat: '$'\n  }\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_CART:\n      return {\n        ...state,\n        data: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { UPDATE_FILTER } from './actionTypes';\n\nconst initialState = {\n  items: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_FILTER:\n      return {\n        ...state,\n        items: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { UPDATE_SORT } from './actionTypes';\n\nconst initialState = {\n  type: ''\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_SORT:\n      return {\n        ...state,\n        type: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport shelfReducer from './shelf/reducer';\nimport cartReducer from './cart/reducer';\nimport totalReducer from './total/reducer';\nimport filtersReducer from './filters/reducer';\nimport sortReducer from './sort/reducer';\n\nexport default combineReducers({\n  shelf: shelfReducer,\n  cart: cartReducer,\n  total: totalReducer,\n  filters: filtersReducer,\n  sort: sortReducer\n});\n","import { compose, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nexport default initialState => {\n  initialState =\n    JSON.parse(window.localStorage.getItem('state')) || initialState;\n  const middleware = [thunk];\n\n  const store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n      applyMiddleware(...middleware)\n      /* window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION__() */\n    )\n  );\n\n  store.subscribe(() => {\n    const state = store.getState();\n    const persist = {\n      cart: state.cart,\n      total: state.total\n    };\n\n    window.localStorage.setItem('state', JSON.stringify(persist));\n  });\n\n  return store;\n};\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport store from './services/store';\n\nconst Root = ({ children, initialState = {} }) => (\n  <Provider store={store(initialState)}>{children}</Provider>\n);\n\nexport default Root;\n","import 'babel-polyfill'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\nimport Root from './Root';\n\nimport './index.scss';\n\nReactDOM.render(\n  <Root>\n    <App />\n  </Root>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
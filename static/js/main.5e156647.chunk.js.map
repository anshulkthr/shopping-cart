{"version":3,"sources":["services/util.js","services/shelf/actions.js","components/Spinner/index.js","components/Shelf/ShelfHeader/index.js","components/Thumb/index.js","components/Shelf/ProductList/Product/index.js","services/cart/actions.js","services/cart/actionTypes.js","components/Shelf/ProductList/index.js","components/Shelf/index.js","services/shelf/actionTypes.js","components/Checkbox/index.js","components/Shelf/Filter/index.js","services/filters/actions.js","services/filters/actionTypes.js","components/Selectbox/index.js","components/Shelf/Sort/index.js","services/sort/actions.js","services/sort/actionTypes.js","components/github/Top.js","components/FloatCart/CartProduct/index.js","components/FloatCart/index.js","services/total/actions.js","services/total/actionTypes.js","components/App/index.js","services/shelf/reducer.js","services/cart/reducer.js","services/total/reducer.js","services/filters/reducer.js","services/sort/reducer.js","services/reducers.js","services/store.js","Root.js","index.js"],"names":["formatPrice","x","currency","toFixed","replace","compare","lowestprice","a","b","price","highestprice","Spinner","react_default","createElement","className","ShelfHeader","props","productsLength","Thumb","classes","src","alt","title","connect","addProduct","product","type","payload","_ref","quantity","formattedPrice","currencyId","onClick","data-sku","id","components_Thumb","img_url","name","substr","length","ProductList","products","map","p","ProductList_Product","key","Shelf","state","isLoading","handleFetchProducts","filters","arguments","undefined","_this","sort","setState","fetchProducts","this","nextProps","nextFilters","nextSort","Fragment","Shelf_ShelfHeader","Shelf_ProductList","Component","shelf","items","sortBy","callback","dispatch","axios","get","then","res","data","console","log","filter","find","f","catch","err","Checkbox","isChecked","toggleCheckboxChange","_this$props","handleCheckboxChange","label","_this$props2","value","checked","onChange","availablePrices","Filter","toggleCheckbox","selectedCheckboxes","has","delete","add","updateFilters","Array","from","createCheckbox","components_Checkbox","createCheckboxes","Set","Selectbox","options","handleOnChange","e","target","o","createOptions","updateSort","components_Selectbox","Top","href","index_es","icon","faStar","Shelf_Sort","CartProduct","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleMouseOver","isMouseOver","handleMouseOut","handleOnIncrease","changeProductQuantity","handleOnDecrease","_this2","removeProduct","push","join","onMouseOver","onMouseOut","concat","disabled","FloatCart","isOpen","openFloatCart","closeFloatCart","cartProducts","updateCart","productAlreadyInCart","forEach","cp","index","findIndex","splice","proceedToCheckout","_this$props$cartTotal","cartTotal","totalPrice","productQuantity","currencyFormat","alert","changedProduct","_this$props3","newProduct","productToRemove","productToChange","_this$props4","FloatCart_CartProduct","installments","cart","productToAdd","total","loadCart","reduce","sum","greater","App","Shelf_Filter","components_Shelf","components_FloatCart","initialState","combineReducers","action","objectSpread","assign","services_store","JSON","parse","window","localStorage","getItem","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","subscribe","getState","persist","setItem","stringify","Root","children","_ref$initialState","es","ReactDOM","render","src_Root","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.5e156647.chunk.js","sourcesContent":["export const formatPrice = (x, currency) => {\n  switch (currency) {\n    case 'BRL':\n      return x.toFixed(2).replace('.', ',');\n    default:\n      return x.toFixed(2);\n  }\n};\n\nexport const productsAPI =\n  'https://api.myjson.com/bins/qzuzi.json';\n// export const productsAPI = \"http://localhost:8001/api/products\";\n","import { FETCH_PRODUCTS } from './actionTypes';\nimport axios from 'axios';\n\nimport { productsAPI } from '../util';\n\nconst compare = {\n  lowestprice: (a, b) => {\n    if (a.price < b.price) return -1;\n    if (a.price > b.price) return 1;\n    return 0;\n  },\n  highestprice: (a, b) => {\n    if (a.price > b.price) return -1;\n    if (a.price < b.price) return 1;\n    return 0;\n  }\n};\n\nexport const fetchProducts = (filters, sortBy, callback) => dispatch => {\n  return axios\n    .get(productsAPI)\n    .then(res => {\n      let products = res.data;\n      console.log('fetch'+filters.length);\n      if (!!filters && filters.length > 0) {\n          console.log('fetch123');\n        products = products.filter(p =>\n          filters.find(f => f >= p.price)\n        );\n\n      }\n\n      if (!!sortBy) {\n        products = products.sort(compare[sortBy]);\n      }\n\n      if (!!callback) {\n        callback();\n      }\n\n      return dispatch({\n        type: FETCH_PRODUCTS,\n        payload: products\n      });\n    })\n    .catch(err => {\n      console.log('Could not fetch products. Try again later.');\n    });\n};\n","import React from 'react';\n\nimport './style.scss';\n\nexport default () => (\n  <div className=\"spinner lds-ring\">\n    <div />\n    <div />\n    <div />\n    <div />\n  </div>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ShelfHeader = props => {\n  return (\n    <div className=\"shelf-container-header\">\n      <small className=\"products-found\">\n        <span>{props.productsLength} Product(s) found.</span>\n      </small>\n    </div>\n  );\n};\n\nShelfHeader.propTypes = {\n  productsLength: PropTypes.number.isRequired\n};\n\nexport default ShelfHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Thumb = props => (\n  <div className={props.classes}>\n    <img src={props.src} alt={props.alt} title={props.title} />\n  </div>\n);\n\nThumb.propTypes = {\n  alt: PropTypes.string,\n  title: PropTypes.string,\n  classes: PropTypes.string,\n  src: PropTypes.string.isRequired\n};\n\nexport default Thumb;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport Thumb from '../../../Thumb';\nimport { formatPrice } from '../../../../services/util';\nimport { addProduct } from '../../../../services/cart/actions';\n\nconst Product = ({ product, addProduct }) => {\n  product.quantity = 1;\n\n  let formattedPrice = formatPrice(product.price, product.currencyId);\n\n  return (\n    <div\n      className=\"shelf-item\"\n      onClick={() => addProduct(product)}\n      data-sku={product.id}\n    >\n      <Thumb\n        classes=\"shelf-item__thumb\"\n        src={product.img_url}\n        alt={product.name}\n      />\n      <p className=\"shelf-item__title\">{product.name}</p>\n      <div className=\"shelf-item__price\">\n        <div className=\"val\">\n          <small>Rs</small>\n          <b>{formattedPrice.substr(0, formattedPrice.length - 3)}</b>\n          <span>{formattedPrice.substr(formattedPrice.length - 3, 3)}</span>\n        </div>\n      </div>\n      <div className=\"shelf-item__buy-btn\">Add to cart</div>\n    </div>\n  );\n};\n\nProduct.propTypes = {\n  product: PropTypes.object.isRequired,\n  addProduct: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { addProduct }\n)(Product);\n","import { LOAD_CART, ADD_PRODUCT, REMOVE_PRODUCT, CHANGE_PRODUCT_QUANTITY } from './actionTypes';\n\nexport const loadCart = products => ({\n  type: LOAD_CART,\n  payload: products\n});\n\nexport const addProduct = product => ({\n  type: ADD_PRODUCT,\n  payload: product\n});\n\nexport const removeProduct = product => ({\n  type: REMOVE_PRODUCT,\n  payload: product\n});\n\nexport const changeProductQuantity = product => ({\n  type: CHANGE_PRODUCT_QUANTITY,\n  payload: product\n});","export const LOAD_CART = 'LOAD_CART';\nexport const ADD_PRODUCT = 'ADD_PRODUCT';\nexport const REMOVE_PRODUCT = 'REMOVE_PRODUCT';\nexport const CHANGE_PRODUCT_QUANTITY = 'CHANGE_PRODUCT_QUANTITY';\nexport const UPDATE_CART = 'UPDATE_CART';\n","  import React from 'react';\n\nimport Product from './Product';\n\nconst ProductList = ({ products }) => {\n  return products.map(p => {\n    return <Product product={p} key={p.id} />;\n  });\n};\n\nexport default ProductList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { fetchProducts } from '../../services/shelf/actions';\n\nimport Spinner from '../Spinner';\nimport ShelfHeader from './ShelfHeader';\nimport ProductList from './ProductList';\n\nimport './style.scss';\n\nclass Shelf extends Component {\n  static propTypes = {\n    fetchProducts: PropTypes.func.isRequired,\n    products: PropTypes.array.isRequired,\n    filters: PropTypes.array,\n    sort: PropTypes.string\n  };\n\n  state = {\n    isLoading: false\n  };\n\n  componentDidMount() {\n    this.handleFetchProducts();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { filters: nextFilters, sort: nextSort } = nextProps;\n    const { filters } = this.props;\n    if (nextFilters.length !== filters.length) {\n      this.handleFetchProducts(nextFilters, undefined);\n    }\n\n    if (nextSort !== this.props.sort) {\n      this.handleFetchProducts(undefined, nextSort);\n    }\n  }\n\n  handleFetchProducts = (\n    filters = this.props.filters,\n    sort = this.props.sort\n  ) => {\n    this.setState({ isLoading: true });\n    this.props.fetchProducts(filters, sort, () => {\n      this.setState({ isLoading: false });\n    });\n  };\n\n  render() {\n    const { products } = this.props;\n    const { isLoading } = this.state;\n\n    return (\n      <React.Fragment>\n        {isLoading && <Spinner />}\n        <div className=\"shelf-container\">\n          <ShelfHeader productsLength={products.length} />\n          <ProductList products={products} />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  products: state.shelf.products,\n  filters: state.filters.items,\n  sort: state.sort.type\n});\n\nexport default connect(\n  mapStateToProps,\n  { fetchProducts }\n)(Shelf);\n","export const FETCH_PRODUCTS = 'FETCH_PRODUCTS';\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Checkbox extends Component {\n  static propTypes = {\n    handleCheckboxChange: PropTypes.func.isRequired\n  };\n\n  state = {\n    isChecked: false\n  };\n\n  toggleCheckboxChange = () => {\n    const { handleCheckboxChange, label } = this.props;\n\n    this.setState(({ isChecked }) => ({\n      isChecked: !isChecked\n    }));\n\n    handleCheckboxChange(label);\n  };\n\n  render() {\n    const { label, classes } = this.props;\n    const { isChecked } = this.state;\n\n    return (\n      <div className={classes}>\n        <label>\n          <input\n            type=\"checkbox\"\n            value={label}\n            checked={isChecked}\n            onChange={this.toggleCheckboxChange}\n          />\n\n          <span className=\"checkmark\">{label}</span>\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default Checkbox;\n","import React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\nimport { updateFilters } from '../../../services/filters/actions';\nimport Checkbox from '../../Checkbox';\nimport './style.scss';\n\nconst availablePrices = [100, 200, 300, 400, 500, 600, 700, 800];\n\nclass Filter extends Component {\n  componentDidMount() {\n    this.selectedCheckboxes = new Set();\n  }\n\n  toggleCheckbox = label => {\n    if (this.selectedCheckboxes.has(label)) {\n      this.selectedCheckboxes.delete(label);\n    } else {\n      this.selectedCheckboxes.add(label);\n    }\n    console.log(this.selectedCheckboxes);\n    this.props.updateFilters(Array.from(this.selectedCheckboxes));\n  };\n\n  createCheckbox = label => (\n    <Checkbox\n      classes=\"filters-available-size\"\n      label={label}\n      handleCheckboxChange={this.toggleCheckbox}\n      key={label}\n    />\n  );\n\n  createCheckboxes = () => availablePrices.map(this.createCheckbox);\n\n  render() {\n    return (\n      <div className=\"filters\">\n        <h4 className=\"title\">Price:</h4>\n        {this.createCheckboxes()}\n      </div>\n    );\n  }\n}\n\n\nexport default connect(\n  null,\n  { updateFilters }\n)(Filter);\n","import { UPDATE_FILTER } from './actionTypes';\n\nexport const updateFilters = filters => ({\n  type: UPDATE_FILTER,\n  payload: filters\n});\n","export const UPDATE_FILTER = 'UPDATE_FILTER';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Selectbox = ({ options, classes, handleOnChange }) => {\n  const createOptions = options =>\n    options.map(o => (\n      <option value={o.value} key={o.value}>\n        {o.label}\n      </option>\n    ));\n\n  return (\n    <select onChange={e => handleOnChange(e.target.value)} className={classes}>\n      {createOptions(options)}\n    </select>\n  );\n};\n\nSelectbox.propTypes = {\n  options: PropTypes.array.isRequired,\n  classes: PropTypes.string,\n  handleOnChange: PropTypes.func.isRequired\n};\n\nexport default Selectbox;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { updateSort } from '../../../services/sort/actions';\nimport Selectbox from '../../Selectbox';\n\nconst sortBy = [\n  { value: '', label: 'Select' },\n  { value: 'lowestprice', label: 'Lowest to highest' },\n  { value: 'highestprice', label: 'Highest to lowest' }\n];\n\nconst Sort = ({ updateSort, sort }) => (\n  <div className=\"sort\">\n    <label>Sort By</label>\n    <Selectbox options={sortBy} handleOnChange={value => updateSort(value)} />\n  </div>\n);\n\nSort.propTypes = {\n  updateSort: PropTypes.func.isRequired,\n  sort: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  sort: state.sort.type\n});\n\nexport default connect(\n  mapStateToProps,\n  { updateSort }\n)(Sort);\n","import { UPDATE_SORT } from './actionTypes';\n\nexport const updateSort = sort => ({\n  type: UPDATE_SORT,\n  payload: sort\n});\n","export const UPDATE_SORT = 'UPDATE_SORT';\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\nimport './style.css';\nimport Sort from '../Shelf/Sort';\n\nexport default (props) => (\n    <div className=\"topHeader\"><a href=\"/\"><FontAwesomeIcon icon={faStar} /></a><Sort/></div>\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Thumb from './../../Thumb';\nimport { formatPrice } from '../../../services/util';\n\nclass CartProduct extends Component {\n  static propTypes = {\n    product: PropTypes.object.isRequired,\n    removeProduct: PropTypes.func.isRequired,\n    changeProductQuantity: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      product: this.props.product,\n      isMouseOver: false\n    };\n  }\n\n  handleMouseOver = () => {\n    this.setState({ isMouseOver: true });\n  };\n\n  handleMouseOut = () => {\n    this.setState({ isMouseOver: false });\n  };\n\n  handleOnIncrease = () => {\n    const { changeProductQuantity } = this.props;\n    const { product } = this.state;\n    product.quantity = product.quantity + 1;\n    changeProductQuantity(product);\n  }\n\n  handleOnDecrease = () => {\n    const { changeProductQuantity } = this.props;\n    const { product } = this.state;\n    product.quantity = product.quantity - 1;\n    changeProductQuantity(product);\n  }\n\n  render() {\n    const { removeProduct } = this.props;\n    const { product } = this.state;\n\n    const classes = ['shelf-item'];\n\n    if (!!this.state.isMouseOver) {\n      classes.push('shelf-item--mouseover');\n    }\n\n    return (\n      <div className={classes.join(' ')}>\n        <div\n          className=\"shelf-item__del\"\n          onMouseOver={() => this.handleMouseOver()}\n          onMouseOut={() => this.handleMouseOut()}\n          onClick={() => removeProduct(product)}\n        />\n        <Thumb\n          classes=\"shelf-item__thumb\"\n          src={product.img_url}\n          alt={product.name}\n        />\n        <div className=\"shelf-item__details\">\n          <p className=\"title\">{product.name}</p>\n          <p className=\"desc\">\n            Quantity: {product.quantity}\n          </p>\n        </div>\n        <div className=\"shelf-item__price\">\n          <p>{`Rs ${formatPrice(product.price, '$')}`}</p>\n          <div>\n            <button onClick={this.handleOnDecrease} disabled={product.quantity === 1 ? true : false} className=\"change-product-button\">-</button>\n            <button onClick={this.handleOnIncrease} className=\"change-product-button\">+</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CartProduct;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { loadCart, removeProduct, changeProductQuantity } from '../../services/cart/actions';\nimport { updateCart } from '../../services/total/actions';\nimport CartProduct from './CartProduct';\nimport { formatPrice } from '../../services/util';\nimport './style.scss';\n\nclass FloatCart extends Component {\n  static propTypes = {\n    loadCart: PropTypes.func.isRequired,\n    updateCart: PropTypes.func.isRequired,\n    cartProducts: PropTypes.array.isRequired,\n    newProduct: PropTypes.object,\n    removeProduct: PropTypes.func,\n    productToRemove: PropTypes.object,\n    changeProductQuantity: PropTypes.func,\n    productToChange: PropTypes.object,\n  };\n\n  state = {\n    isOpen: false\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.newProduct !== this.props.newProduct) {\n      this.addProduct(nextProps.newProduct);\n    }\n\n    if (nextProps.productToRemove !== this.props.productToRemove) {\n      this.removeProduct(nextProps.productToRemove);\n    }\n\n    if (nextProps.productToChange !== this.props.productToChange) {\n      this.changeProductQuantity(nextProps.productToChange);\n    }\n  }\n\n  openFloatCart = () => {\n    this.setState({ isOpen: true });\n  };\n\n  closeFloatCart = () => {\n    this.setState({ isOpen: false });\n  };\n\n  addProduct = product => {\n    const { cartProducts, updateCart } = this.props;\n    let productAlreadyInCart = false;\n\n    cartProducts.forEach(cp => {\n      if (cp.id === product.id) {\n        cp.quantity += product.quantity;\n        productAlreadyInCart = true;\n      }\n    });\n\n    if (!productAlreadyInCart) {\n      cartProducts.push(product);\n    }\n\n    updateCart(cartProducts);\n    this.openFloatCart();\n  };\n\n  removeProduct = product => {\n    const { cartProducts, updateCart } = this.props;\n\n    const index = cartProducts.findIndex(p => p.id === product.id);\n    if (index >= 0) {\n      cartProducts.splice(index, 1);\n      updateCart(cartProducts);\n    }\n  };\n\n  proceedToCheckout = () => {\n    const {\n      totalPrice,\n      productQuantity,\n      currencyFormat,\n      currencyId\n    } = this.props.cartTotal;\n\n    if (!productQuantity) {\n      alert('Add some product in the cart!');\n    } else {\n      alert(\n        `Checkout - Subtotal: ${currencyFormat} ${formatPrice(\n          totalPrice,\n          currencyId\n        )}`\n      );\n    }\n  };\n\n  changeProductQuantity = changedProduct => {\n    const { cartProducts, updateCart } = this.props;\n\n    const product = cartProducts.find(p => p.id === changedProduct.id);\n    product.quantity = changedProduct.quantity;\n    if (product.quantity <= 0) {\n      this.removeProduct(product);\n    }\n    updateCart(cartProducts);\n  }\n\n  render() {\n    const { cartTotal, cartProducts, removeProduct, changeProductQuantity } = this.props;\n\n    const products = cartProducts.map(p => {\n      return (\n        <CartProduct product={p} removeProduct={removeProduct} changeProductQuantity={changeProductQuantity} key={p.id} />\n      );\n    });\n\n    let classes = ['float-cart'];\n\n    if (!!this.state.isOpen) {\n      classes.push('float-cart--open');\n    }\n\n    return (\n\n      <div className={classes.join(' ')}>\n        {/* If cart open, show close (x) button */}\n        {this.state.isOpen && (\n          <div\n            onClick={() => this.closeFloatCart()}\n            className=\"float-cart__close-btn\"\n          >\n            X\n          </div>\n        )}\n\n        {/* If cart is closed, show bag with quantity of product and open cart action */}\n        {!this.state.isOpen && (\n          <span\n            onClick={() => this.openFloatCart()}\n            className=\"bag bag--float-cart-closed\"\n          >\n            <span className=\"bag__quantity\">{cartTotal.productQuantity}</span>\n          </span>\n        )}\n\n        <div className=\"float-cart__content\">\n          <div className=\"float-cart__header\">\n            <span className=\"bag\">\n              <span className=\"bag__quantity\">{cartTotal.productQuantity}</span>\n            </span>\n            <span className=\"header-title\">Cart</span>\n          </div>\n\n          <div className=\"float-cart__shelf-container\">\n            {products}\n            {!products.length && (\n              <p className=\"shelf-empty\">\n                Add some products in the cart <br />\n                :)\n              </p>\n            )}\n          </div>\n\n          <div className=\"float-cart__footer\">\n            <div className=\"sub\">SUBTOTAL</div>\n            <div className=\"sub-price\">\n              <p className=\"sub-price__val\">\n                {`Rs ${formatPrice(\n                  cartTotal.totalPrice,\n                  cartTotal.currencyId\n                )}`}\n              </p>\n              <small className=\"sub-price__installment\">\n                {!!cartTotal.installments && (\n                  <span>\n                    {`OR UP TO ${cartTotal.installments} x ${\n                      cartTotal.currencyFormat\n                    } ${formatPrice(\n                      cartTotal.totalPrice / cartTotal.installments,\n                      cartTotal.currencyId\n                    )}`}\n                  </span>\n                )}\n              </small>\n            </div>\n            <div onClick={() => this.proceedToCheckout()} className=\"buy-btn\">\n              Checkout\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  cartProducts: state.cart.products,\n  newProduct: state.cart.productToAdd,\n  productToRemove: state.cart.productToRemove,\n  productToChange: state.cart.productToChange,\n  cartTotal: state.total.data\n});\n\nexport default connect(\n  mapStateToProps,\n  { loadCart, updateCart, removeProduct, changeProductQuantity }\n)(FloatCart);\n","import { UPDATE_CART } from './actionTypes';\n\nexport const updateCart = cartProducts => dispatch => {\n  let productQuantity = cartProducts.reduce((sum, p) => {\n    sum += p.quantity;\n    return sum;\n  }, 0);\n\n  let totalPrice = cartProducts.reduce((sum, p) => {\n    sum += p.price * p.quantity;\n    return sum;\n  }, 0);\n\n  let installments = cartProducts.reduce((greater, p) => {\n    greater = p.installments > greater ? p.installments : greater;\n    return greater;\n  }, 0);\n\n  let cartTotal = {\n    productQuantity,\n    installments,\n    totalPrice,\n    currencyId: 'USD',\n    currencyFormat: '$'\n  };\n\n  dispatch({\n    type: UPDATE_CART,\n    payload: cartTotal\n  });\n};\n","export const UPDATE_CART = 'UPDATE_CART';\n","import React from 'react';\nimport Shelf from '../Shelf';\nimport Filter from '../Shelf/Filter';\nimport GithubCorner from '../github/Top';\nimport FloatCart from '../FloatCart';\n\nconst App = () => (\n  <React.Fragment>\n    <GithubCorner />\n    <main>\n      <Filter/>\n      <Shelf />\n      <FloatCart />\n    </main>\n  </React.Fragment>\n);\n\nexport default App;\n","import { FETCH_PRODUCTS } from './actionTypes';\n\nconst initialState = {\n  products: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_PRODUCTS:\n      return {\n        ...state,\n        products: action.payload,\n\n      };\n    default:\n      return state;\n  }\n}\n","import { LOAD_CART, ADD_PRODUCT, REMOVE_PRODUCT, CHANGE_PRODUCT_QUANTITY } from './actionTypes';\n\nconst initialState = {\n  products: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case LOAD_CART:\n      return {\n        ...state,\n        products: action.payload\n      };\n    case ADD_PRODUCT:\n      return {\n        ...state,\n        productToAdd: Object.assign({}, action.payload)\n      };\n    case REMOVE_PRODUCT:\n      return {\n        ...state,\n        productToRemove: Object.assign({}, action.payload)\n      };\n    case CHANGE_PRODUCT_QUANTITY:\n      return {\n        ...state,\n        productToChange: Object.assign({}, action.payload)\n      };\n    default:\n      return state;\n  }\n}\n","import { UPDATE_CART } from './actionTypes';\n\nconst initialState = {\n  data: {\n    productQuantity: 0,\n    installments: 0,\n    totalPrice: 0,\n    currencyId: 'USD',\n    currencyFormat: '$'\n  }\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_CART:\n      return {\n        ...state,\n        data: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { UPDATE_FILTER } from './actionTypes';\n\nconst initialState = {\n  items: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_FILTER:\n      return {\n        ...state,\n        items: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { UPDATE_SORT } from './actionTypes';\n\nconst initialState = {\n  type: ''\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_SORT:\n      return {\n        ...state,\n        type: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport shelfReducer from './shelf/reducer';\nimport cartReducer from './cart/reducer';\nimport totalReducer from './total/reducer';\nimport filtersReducer from './filters/reducer';\nimport sortReducer from './sort/reducer';\n\nexport default combineReducers({\n  shelf: shelfReducer,\n  cart: cartReducer,\n  total: totalReducer,\n  filters: filtersReducer,\n  sort: sortReducer\n});\n","import { compose, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nexport default initialState => {\n  initialState =\n    JSON.parse(window.localStorage.getItem('state')) || initialState;\n  const middleware = [thunk];\n\n  const store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n      applyMiddleware(...middleware)\n      /* window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION__() */\n    )\n  );\n\n  store.subscribe(() => {\n    const state = store.getState();\n    const persist = {\n      cart: state.cart,\n      total: state.total\n    };\n\n    window.localStorage.setItem('state', JSON.stringify(persist));\n  });\n\n  return store;\n};\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport store from './services/store';\n\nconst Root = ({ children, initialState = {} }) => (\n  <Provider store={store(initialState)}>{children}</Provider>\n);\n\nexport default Root;\n","import 'babel-polyfill'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\nimport Root from './Root';\n\nimport './index.scss';\n\nReactDOM.render(\n  <Root>\n    <App />\n  </Root>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}